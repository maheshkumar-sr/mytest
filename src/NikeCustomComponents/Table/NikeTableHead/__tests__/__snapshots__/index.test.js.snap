// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NikeCustomeComponents TableHead />  render the component correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <NikeTableHead
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          columnData={
            Array [
              Object {
                "key": "poNumber",
                "label": "P.O#",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "trackingNo",
                "label": "Trading P.O",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "plantCode",
                "label": "Item#",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "totalQuantity",
                "label": "Quantity",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "vendorName",
                "label": "VendorName",
                "link": false,
                "type": "string",
              },
              Object {
                "key": "ogacDate",
                "label": "OGACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "podcsDate",
                "label": "GACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "unitPrice",
                "label": "NetUnitPrice",
                "link": false,
                "type": "numeric",
              },
            ]
          }
          getMenuList={[MockFunction]}
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          moreDetail={true}
          numSelected={0}
          onRequestSort={[MockFunction]}
          onSelectAllClick={[MockFunction]}
          openHamburger={true}
          order="asc"
          orderBy="itemNumber"
          orderbyDefaultState="itemNumber"
          rowCount={70}
          rowData={
            Array [
              Object {
                "gacDate": "2019-07-16T17:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-07-16T17:00:00.000Z",
                "plantCode": 999,
                "poCategory": "Accepted",
                "poNumber": 6754891051,
                "podcsDate": "2019-07-16T17:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 66,
                "trackingNo": 6183472548,
                "unitPrice": 320,
                "vendorName": "GH",
              },
              Object {
                "gacDate": "2019-09-11T14:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-09-11T14:00:00.000Z",
                "plantCode": 1045,
                "poCategory": "Accepted",
                "poNumber": 6754891693,
                "podcsDate": "2019-09-11T14:00:00.000Z",
                "season": "Spring(SP)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 71,
                "trackingNo": 6764323575,
                "unitPrice": 113,
                "vendorName": "JP",
              },
              Object {
                "gacDate": "2019-07-23T14:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-07-23T14:00:00.000Z",
                "plantCode": 1026,
                "poCategory": "Accepted",
                "poNumber": 6754893869,
                "podcsDate": "2019-07-23T14:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE SPORTS(CHINA) CO LTD",
                "totalQuantity": 23,
                "trackingNo": 6680310088,
                "unitPrice": 302,
                "vendorName": "MK",
              },
              Object {
                "gacDate": "2019-04-24T13:00:00.000Z",
                "material": "DS2089-005",
                "ogacDate": "2019-04-24T13:00:00.000Z",
                "plantCode": 1023,
                "poCategory": "Accepted",
                "poNumber": 6754891553,
                "podcsDate": "2019-04-24T13:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "AMERICAS SAMPLE PROGRAM",
                "totalQuantity": 49,
                "trackingNo": 6198444888,
                "unitPrice": 39,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-03-23T12:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-03-23T12:00:00.000Z",
                "plantCode": 1029,
                "poCategory": "Accepted",
                "poNumber": 6754892369,
                "podcsDate": "2019-03-23T12:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 5,
                "trackingNo": 6852545578,
                "unitPrice": 284,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-06-11T22:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-06-11T22:00:00.000Z",
                "plantCode": 1071,
                "poCategory": "Accepted",
                "poNumber": 6754893083,
                "podcsDate": "2019-06-11T22:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 98,
                "trackingNo": 6972677938,
                "unitPrice": 80,
                "vendorName": "DW",
              },
            ]
          }
          rowsPerPageOptionsState={
            Array [
              5,
              7,
              10,
              15,
              20,
              25,
            ]
          }
          searchKeyword="LS"
          sortingOrder="asc"
          uniqueKey="poNumber"
        >
          <WithStyles(ForwardRef(TableHead))
            classes={
              Object {
                "root": "tableHead",
              }
            }
          >
            <ForwardRef(TableHead)
              classes={
                Object {
                  "root": "MuiTableHead-root tableHead",
                }
              }
            >
              <thead
                className="MuiTableHead-root tableHead"
              >
                <WithStyles(ForwardRef(TableRow))>
                  <ForwardRef(TableRow)
                    classes={
                      Object {
                        "footer": "MuiTableRow-footer",
                        "head": "MuiTableRow-head",
                        "hover": "MuiTableRow-hover",
                        "root": "MuiTableRow-root",
                        "selected": "Mui-selected",
                      }
                    }
                  >
                    <tr
                      className="MuiTableRow-root MuiTableRow-head"
                    >
                      <WithStyles(ForwardRef(TableCell))
                        padding="checkbox"
                      >
                        <ForwardRef(TableCell)
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          padding="checkbox"
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-paddingCheckbox"
                            scope="col"
                          >
                            <CheckboxItem
                              checked={false}
                              id="tableHeadCheckBoxItem"
                              indeterminate={false}
                              onChange={[MockFunction]}
                            >
                              <div
                                className="checkBoxContainer"
                              >
                                <WithStyles(ForwardRef(FormControlLabel))
                                  className="formControllerContainer"
                                  control={
                                    <WithStyles(ForwardRef(Checkbox))
                                      checked={false}
                                      checkedIcon={<CheckBoxCheckedIcon />}
                                      className="checkBoxContainer"
                                      classes={
                                        Object {
                                          "checked": "checkBoxChecked",
                                          "root": "checkBoxRoot",
                                        }
                                      }
                                      disableRipple={true}
                                      icon={<CheckBoxOutlineBlankIcon />}
                                      id="tableHeadCheckBoxItem"
                                      indeterminate={false}
                                      onChange={[MockFunction]}
                                    />
                                  }
                                >
                                  <ForwardRef(FormControlLabel)
                                    className="formControllerContainer"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      />
                                    }
                                  >
                                    <label
                                      className="MuiFormControlLabel-root formControllerContainer"
                                    >
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      >
                                        <ForwardRef(Checkbox)
                                          checked={false}
                                          checkedIcon={<CheckBoxCheckedIcon />}
                                          className="checkBoxContainer"
                                          classes={
                                            Object {
                                              "checked": "Mui-checked checkBoxChecked",
                                              "colorPrimary": "MuiCheckbox-colorPrimary",
                                              "colorSecondary": "MuiCheckbox-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "indeterminate": "MuiCheckbox-indeterminate",
                                              "root": "MuiCheckbox-root checkBoxRoot",
                                            }
                                          }
                                          disableRipple={true}
                                          icon={<CheckBoxOutlineBlankIcon />}
                                          id="tableHeadCheckBoxItem"
                                          indeterminate={false}
                                          onChange={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={
                                              <CheckBoxCheckedIcon
                                                fontSize="default"
                                              />
                                            }
                                            className="checkBoxContainer"
                                            classes={
                                              Object {
                                                "checked": "Mui-checked checkBoxChecked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disableRipple={true}
                                            icon={
                                              <CheckBoxOutlineBlankIcon
                                                fontSize="default"
                                              />
                                            }
                                            id="tableHeadCheckBoxItem"
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                              }
                                            }
                                            onChange={[MockFunction]}
                                            type="checkbox"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={
                                                <CheckBoxCheckedIcon
                                                  fontSize="default"
                                                />
                                              }
                                              className="checkBoxContainer"
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-32 Mui-checked checkBoxChecked",
                                                  "disabled": "PrivateSwitchBase-disabled-33 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-34",
                                                  "root": "PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disableRipple={true}
                                              icon={
                                                <CheckBoxOutlineBlankIcon
                                                  fontSize="default"
                                                />
                                              }
                                              id="tableHeadCheckBoxItem"
                                              inputProps={
                                                Object {
                                                  "data-indeterminate": false,
                                                }
                                              }
                                              onChange={[MockFunction]}
                                              type="checkbox"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                color="secondary"
                                                component="span"
                                                disableRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disableRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disableRipple={true}
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-34"
                                                            data-indeterminate={false}
                                                            id="tableHeadCheckBoxItem"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <CheckBoxOutlineBlankIcon
                                                            fontSize="default"
                                                          >
                                                            <div
                                                              className="checkBoxBlank"
                                                            />
                                                          </CheckBoxOutlineBlankIcon>
                                                        </span>
                                                        <NoSsr />
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Checkbox)>
                                      </WithStyles(ForwardRef(Checkbox))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          />
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                              </div>
                            </CheckboxItem>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="poNumber"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      P.O#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="trackingNo"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Trading P.O
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="plantCode"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Item#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="totalQuantity"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Quantity
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="vendorName"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      VendorName
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="ogacDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      OGACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="podcsDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      GACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="unitPrice"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      NetUnitPrice
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                    </tr>
                  </ForwardRef(TableRow)>
                </WithStyles(ForwardRef(TableRow))>
              </thead>
            </ForwardRef(TableHead)>
          </WithStyles(ForwardRef(TableHead))>
        </NikeTableHead>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;

exports[`<NikeCustomeComponents TableHead />  render the component correctly 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <NikeTableHead
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          columnData={
            Array [
              Object {
                "key": "poNumber",
                "label": "P.O#",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "trackingNo",
                "label": "Trading P.O",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "plantCode",
                "label": "Item#",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "totalQuantity",
                "label": "Quantity",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "vendorName",
                "label": "VendorName",
                "link": false,
                "type": "string",
              },
              Object {
                "key": "ogacDate",
                "label": "OGACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "podcsDate",
                "label": "GACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "unitPrice",
                "label": "NetUnitPrice",
                "link": false,
                "type": "numeric",
              },
            ]
          }
          getMenuList={[MockFunction]}
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          moreDetail={true}
          numSelected={0}
          onRequestSort={[MockFunction]}
          onSelectAllClick={[MockFunction]}
          openHamburger={false}
          order="asc"
          orderBy="itemNumber"
          orderbyDefaultState="itemNumber"
          rowCount={70}
          rowData={
            Array [
              Object {
                "gacDate": "2019-07-16T17:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-07-16T17:00:00.000Z",
                "plantCode": 999,
                "poCategory": "Accepted",
                "poNumber": 6754891051,
                "podcsDate": "2019-07-16T17:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 66,
                "trackingNo": 6183472548,
                "unitPrice": 320,
                "vendorName": "GH",
              },
              Object {
                "gacDate": "2019-09-11T14:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-09-11T14:00:00.000Z",
                "plantCode": 1045,
                "poCategory": "Accepted",
                "poNumber": 6754891693,
                "podcsDate": "2019-09-11T14:00:00.000Z",
                "season": "Spring(SP)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 71,
                "trackingNo": 6764323575,
                "unitPrice": 113,
                "vendorName": "JP",
              },
              Object {
                "gacDate": "2019-07-23T14:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-07-23T14:00:00.000Z",
                "plantCode": 1026,
                "poCategory": "Accepted",
                "poNumber": 6754893869,
                "podcsDate": "2019-07-23T14:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE SPORTS(CHINA) CO LTD",
                "totalQuantity": 23,
                "trackingNo": 6680310088,
                "unitPrice": 302,
                "vendorName": "MK",
              },
              Object {
                "gacDate": "2019-04-24T13:00:00.000Z",
                "material": "DS2089-005",
                "ogacDate": "2019-04-24T13:00:00.000Z",
                "plantCode": 1023,
                "poCategory": "Accepted",
                "poNumber": 6754891553,
                "podcsDate": "2019-04-24T13:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "AMERICAS SAMPLE PROGRAM",
                "totalQuantity": 49,
                "trackingNo": 6198444888,
                "unitPrice": 39,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-03-23T12:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-03-23T12:00:00.000Z",
                "plantCode": 1029,
                "poCategory": "Accepted",
                "poNumber": 6754892369,
                "podcsDate": "2019-03-23T12:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 5,
                "trackingNo": 6852545578,
                "unitPrice": 284,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-06-11T22:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-06-11T22:00:00.000Z",
                "plantCode": 1071,
                "poCategory": "Accepted",
                "poNumber": 6754893083,
                "podcsDate": "2019-06-11T22:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 98,
                "trackingNo": 6972677938,
                "unitPrice": 80,
                "vendorName": "DW",
              },
            ]
          }
          rowsPerPageOptionsState={
            Array [
              5,
              7,
              10,
              15,
              20,
              25,
            ]
          }
          searchKeyword="LS"
          sortingOrder="asc"
          uniqueKey="poNumber"
        >
          <WithStyles(ForwardRef(TableHead))
            classes={
              Object {
                "root": "tableHead",
              }
            }
          >
            <ForwardRef(TableHead)
              classes={
                Object {
                  "root": "MuiTableHead-root tableHead",
                }
              }
            >
              <thead
                className="MuiTableHead-root tableHead"
              >
                <WithStyles(ForwardRef(TableRow))>
                  <ForwardRef(TableRow)
                    classes={
                      Object {
                        "footer": "MuiTableRow-footer",
                        "head": "MuiTableRow-head",
                        "hover": "MuiTableRow-hover",
                        "root": "MuiTableRow-root",
                        "selected": "Mui-selected",
                      }
                    }
                  >
                    <tr
                      className="MuiTableRow-root MuiTableRow-head"
                    >
                      <WithStyles(ForwardRef(TableCell))
                        padding="checkbox"
                      >
                        <ForwardRef(TableCell)
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          padding="checkbox"
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-paddingCheckbox"
                            scope="col"
                          >
                            <CheckboxItem
                              checked={false}
                              id="tableHeadCheckBoxItem"
                              indeterminate={false}
                              onChange={[MockFunction]}
                            >
                              <div
                                className="checkBoxContainer"
                              >
                                <WithStyles(ForwardRef(FormControlLabel))
                                  className="formControllerContainer"
                                  control={
                                    <WithStyles(ForwardRef(Checkbox))
                                      checked={false}
                                      checkedIcon={<CheckBoxCheckedIcon />}
                                      className="checkBoxContainer"
                                      classes={
                                        Object {
                                          "checked": "checkBoxChecked",
                                          "root": "checkBoxRoot",
                                        }
                                      }
                                      disableRipple={true}
                                      icon={<CheckBoxOutlineBlankIcon />}
                                      id="tableHeadCheckBoxItem"
                                      indeterminate={false}
                                      onChange={[MockFunction]}
                                    />
                                  }
                                >
                                  <ForwardRef(FormControlLabel)
                                    className="formControllerContainer"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      />
                                    }
                                  >
                                    <label
                                      className="MuiFormControlLabel-root formControllerContainer"
                                    >
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      >
                                        <ForwardRef(Checkbox)
                                          checked={false}
                                          checkedIcon={<CheckBoxCheckedIcon />}
                                          className="checkBoxContainer"
                                          classes={
                                            Object {
                                              "checked": "Mui-checked checkBoxChecked",
                                              "colorPrimary": "MuiCheckbox-colorPrimary",
                                              "colorSecondary": "MuiCheckbox-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "indeterminate": "MuiCheckbox-indeterminate",
                                              "root": "MuiCheckbox-root checkBoxRoot",
                                            }
                                          }
                                          disableRipple={true}
                                          icon={<CheckBoxOutlineBlankIcon />}
                                          id="tableHeadCheckBoxItem"
                                          indeterminate={false}
                                          onChange={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={
                                              <CheckBoxCheckedIcon
                                                fontSize="default"
                                              />
                                            }
                                            className="checkBoxContainer"
                                            classes={
                                              Object {
                                                "checked": "Mui-checked checkBoxChecked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disableRipple={true}
                                            icon={
                                              <CheckBoxOutlineBlankIcon
                                                fontSize="default"
                                              />
                                            }
                                            id="tableHeadCheckBoxItem"
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                              }
                                            }
                                            onChange={[MockFunction]}
                                            type="checkbox"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={
                                                <CheckBoxCheckedIcon
                                                  fontSize="default"
                                                />
                                              }
                                              className="checkBoxContainer"
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-32 Mui-checked checkBoxChecked",
                                                  "disabled": "PrivateSwitchBase-disabled-33 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-34",
                                                  "root": "PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disableRipple={true}
                                              icon={
                                                <CheckBoxOutlineBlankIcon
                                                  fontSize="default"
                                                />
                                              }
                                              id="tableHeadCheckBoxItem"
                                              inputProps={
                                                Object {
                                                  "data-indeterminate": false,
                                                }
                                              }
                                              onChange={[MockFunction]}
                                              type="checkbox"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                color="secondary"
                                                component="span"
                                                disableRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disableRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disableRipple={true}
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-34"
                                                            data-indeterminate={false}
                                                            id="tableHeadCheckBoxItem"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <CheckBoxOutlineBlankIcon
                                                            fontSize="default"
                                                          >
                                                            <div
                                                              className="checkBoxBlank"
                                                            />
                                                          </CheckBoxOutlineBlankIcon>
                                                        </span>
                                                        <NoSsr />
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Checkbox)>
                                      </WithStyles(ForwardRef(Checkbox))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          />
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                              </div>
                            </CheckboxItem>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="poNumber"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      P.O#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="trackingNo"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Trading P.O
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="plantCode"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Item#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="totalQuantity"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Quantity
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="vendorName"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      VendorName
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="ogacDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      OGACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="podcsDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      GACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="unitPrice"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      NetUnitPrice
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                    </tr>
                  </ForwardRef(TableRow)>
                </WithStyles(ForwardRef(TableRow))>
              </thead>
            </ForwardRef(TableHead)>
          </WithStyles(ForwardRef(TableHead))>
        </NikeTableHead>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;

exports[`<NikeCustomeComponents TableHead />  render the component correctly 3`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <NikeTableHead
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          columnData={
            Array [
              Object {
                "key": "poNumber",
                "label": "P.O#",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "trackingNo",
                "label": "Trading P.O",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "plantCode",
                "label": "Item#",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "totalQuantity",
                "label": "Quantity",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "vendorName",
                "label": "VendorName",
                "link": false,
                "type": "string",
              },
              Object {
                "key": "ogacDate",
                "label": "OGACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "podcsDate",
                "label": "GACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "unitPrice",
                "label": "NetUnitPrice",
                "link": false,
                "type": "numeric",
              },
            ]
          }
          getMenuList={[MockFunction]}
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          moreDetail={false}
          numSelected={0}
          onRequestSort={[MockFunction]}
          onSelectAllClick={[MockFunction]}
          openHamburger={true}
          order="asc"
          orderBy="itemNumber"
          orderbyDefaultState={1}
          rowCount={70}
          rowData={
            Array [
              Object {
                "gacDate": "2019-07-16T17:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-07-16T17:00:00.000Z",
                "plantCode": 999,
                "poCategory": "Accepted",
                "poNumber": 6754891051,
                "podcsDate": "2019-07-16T17:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 66,
                "trackingNo": 6183472548,
                "unitPrice": 320,
                "vendorName": "GH",
              },
              Object {
                "gacDate": "2019-09-11T14:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-09-11T14:00:00.000Z",
                "plantCode": 1045,
                "poCategory": "Accepted",
                "poNumber": 6754891693,
                "podcsDate": "2019-09-11T14:00:00.000Z",
                "season": "Spring(SP)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 71,
                "trackingNo": 6764323575,
                "unitPrice": 113,
                "vendorName": "JP",
              },
              Object {
                "gacDate": "2019-07-23T14:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-07-23T14:00:00.000Z",
                "plantCode": 1026,
                "poCategory": "Accepted",
                "poNumber": 6754893869,
                "podcsDate": "2019-07-23T14:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE SPORTS(CHINA) CO LTD",
                "totalQuantity": 23,
                "trackingNo": 6680310088,
                "unitPrice": 302,
                "vendorName": "MK",
              },
              Object {
                "gacDate": "2019-04-24T13:00:00.000Z",
                "material": "DS2089-005",
                "ogacDate": "2019-04-24T13:00:00.000Z",
                "plantCode": 1023,
                "poCategory": "Accepted",
                "poNumber": 6754891553,
                "podcsDate": "2019-04-24T13:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "AMERICAS SAMPLE PROGRAM",
                "totalQuantity": 49,
                "trackingNo": 6198444888,
                "unitPrice": 39,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-03-23T12:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-03-23T12:00:00.000Z",
                "plantCode": 1029,
                "poCategory": "Accepted",
                "poNumber": 6754892369,
                "podcsDate": "2019-03-23T12:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 5,
                "trackingNo": 6852545578,
                "unitPrice": 284,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-06-11T22:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-06-11T22:00:00.000Z",
                "plantCode": 1071,
                "poCategory": "Accepted",
                "poNumber": 6754893083,
                "podcsDate": "2019-06-11T22:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 98,
                "trackingNo": 6972677938,
                "unitPrice": 80,
                "vendorName": "DW",
              },
            ]
          }
          rowsPerPageOptionsState={
            Array [
              5,
              7,
              10,
              15,
              20,
              25,
            ]
          }
          searchKeyword="LS"
          sortingOrder="desc"
          uniqueKey="poNumber"
        >
          <WithStyles(ForwardRef(TableHead))
            classes={
              Object {
                "root": "tableHead",
              }
            }
          >
            <ForwardRef(TableHead)
              classes={
                Object {
                  "root": "MuiTableHead-root tableHead",
                }
              }
            >
              <thead
                className="MuiTableHead-root tableHead"
              >
                <WithStyles(ForwardRef(TableRow))>
                  <ForwardRef(TableRow)
                    classes={
                      Object {
                        "footer": "MuiTableRow-footer",
                        "head": "MuiTableRow-head",
                        "hover": "MuiTableRow-hover",
                        "root": "MuiTableRow-root",
                        "selected": "Mui-selected",
                      }
                    }
                  >
                    <tr
                      className="MuiTableRow-root MuiTableRow-head"
                    >
                      <WithStyles(ForwardRef(TableCell))
                        padding="checkbox"
                      >
                        <ForwardRef(TableCell)
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          padding="checkbox"
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-paddingCheckbox"
                            scope="col"
                          >
                            <CheckboxItem
                              checked={false}
                              id="tableHeadCheckBoxItem"
                              indeterminate={false}
                              onChange={[MockFunction]}
                            >
                              <div
                                className="checkBoxContainer"
                              >
                                <WithStyles(ForwardRef(FormControlLabel))
                                  className="formControllerContainer"
                                  control={
                                    <WithStyles(ForwardRef(Checkbox))
                                      checked={false}
                                      checkedIcon={<CheckBoxCheckedIcon />}
                                      className="checkBoxContainer"
                                      classes={
                                        Object {
                                          "checked": "checkBoxChecked",
                                          "root": "checkBoxRoot",
                                        }
                                      }
                                      disableRipple={true}
                                      icon={<CheckBoxOutlineBlankIcon />}
                                      id="tableHeadCheckBoxItem"
                                      indeterminate={false}
                                      onChange={[MockFunction]}
                                    />
                                  }
                                >
                                  <ForwardRef(FormControlLabel)
                                    className="formControllerContainer"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      />
                                    }
                                  >
                                    <label
                                      className="MuiFormControlLabel-root formControllerContainer"
                                    >
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      >
                                        <ForwardRef(Checkbox)
                                          checked={false}
                                          checkedIcon={<CheckBoxCheckedIcon />}
                                          className="checkBoxContainer"
                                          classes={
                                            Object {
                                              "checked": "Mui-checked checkBoxChecked",
                                              "colorPrimary": "MuiCheckbox-colorPrimary",
                                              "colorSecondary": "MuiCheckbox-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "indeterminate": "MuiCheckbox-indeterminate",
                                              "root": "MuiCheckbox-root checkBoxRoot",
                                            }
                                          }
                                          disableRipple={true}
                                          icon={<CheckBoxOutlineBlankIcon />}
                                          id="tableHeadCheckBoxItem"
                                          indeterminate={false}
                                          onChange={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={
                                              <CheckBoxCheckedIcon
                                                fontSize="default"
                                              />
                                            }
                                            className="checkBoxContainer"
                                            classes={
                                              Object {
                                                "checked": "Mui-checked checkBoxChecked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disableRipple={true}
                                            icon={
                                              <CheckBoxOutlineBlankIcon
                                                fontSize="default"
                                              />
                                            }
                                            id="tableHeadCheckBoxItem"
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                              }
                                            }
                                            onChange={[MockFunction]}
                                            type="checkbox"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={
                                                <CheckBoxCheckedIcon
                                                  fontSize="default"
                                                />
                                              }
                                              className="checkBoxContainer"
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-32 Mui-checked checkBoxChecked",
                                                  "disabled": "PrivateSwitchBase-disabled-33 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-34",
                                                  "root": "PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disableRipple={true}
                                              icon={
                                                <CheckBoxOutlineBlankIcon
                                                  fontSize="default"
                                                />
                                              }
                                              id="tableHeadCheckBoxItem"
                                              inputProps={
                                                Object {
                                                  "data-indeterminate": false,
                                                }
                                              }
                                              onChange={[MockFunction]}
                                              type="checkbox"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                color="secondary"
                                                component="span"
                                                disableRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disableRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disableRipple={true}
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-34"
                                                            data-indeterminate={false}
                                                            id="tableHeadCheckBoxItem"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <CheckBoxOutlineBlankIcon
                                                            fontSize="default"
                                                          >
                                                            <div
                                                              className="checkBoxBlank"
                                                            />
                                                          </CheckBoxOutlineBlankIcon>
                                                        </span>
                                                        <NoSsr />
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Checkbox)>
                                      </WithStyles(ForwardRef(Checkbox))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          />
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                              </div>
                            </CheckboxItem>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="poNumber"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      P.O#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="trackingNo"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Trading P.O
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="plantCode"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Item#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="totalQuantity"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Quantity
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="vendorName"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      VendorName
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="ogacDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      OGACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="podcsDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      GACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="unitPrice"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      NetUnitPrice
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                    </tr>
                  </ForwardRef(TableRow)>
                </WithStyles(ForwardRef(TableRow))>
              </thead>
            </ForwardRef(TableHead)>
          </WithStyles(ForwardRef(TableHead))>
        </NikeTableHead>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;

exports[`<NikeCustomeComponents TableHead />  render the component correctly 4`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <NikeTableHead
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          columnData={
            Array [
              Object {
                "key": "poNumber",
                "label": "P.O#",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "trackingNo",
                "label": "Trading P.O",
                "link": true,
                "type": "numeric",
              },
              Object {
                "key": "plantCode",
                "label": "Item#",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "totalQuantity",
                "label": "Quantity",
                "link": false,
                "type": "numeric",
              },
              Object {
                "key": "vendorName",
                "label": "VendorName",
                "link": false,
                "type": "string",
              },
              Object {
                "key": "ogacDate",
                "label": "OGACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "podcsDate",
                "label": "GACDate",
                "link": false,
                "type": "date",
              },
              Object {
                "key": "unitPrice",
                "label": "NetUnitPrice",
                "link": false,
                "type": "numeric",
              },
            ]
          }
          getMenuList={[MockFunction]}
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          moreDetail={true}
          numSelected={0}
          onRequestSort={[MockFunction]}
          onSelectAllClick={[MockFunction]}
          openHamburger={true}
          order="asc"
          orderBy="itemNumber"
          orderbyDefaultState="itemNumber"
          rowCount={70}
          rowData={
            Array [
              Object {
                "gacDate": "2019-07-16T17:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-07-16T17:00:00.000Z",
                "plantCode": 999,
                "poCategory": "Accepted",
                "poNumber": 6754891051,
                "podcsDate": "2019-07-16T17:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 66,
                "trackingNo": 6183472548,
                "unitPrice": 320,
                "vendorName": "GH",
              },
              Object {
                "gacDate": "2019-09-11T14:00:00.000Z",
                "material": "FT3075-400",
                "ogacDate": "2019-09-11T14:00:00.000Z",
                "plantCode": 1045,
                "poCategory": "Accepted",
                "poNumber": 6754891693,
                "podcsDate": "2019-09-11T14:00:00.000Z",
                "season": "Spring(SP)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 71,
                "trackingNo": 6764323575,
                "unitPrice": 113,
                "vendorName": "JP",
              },
              Object {
                "gacDate": "2019-07-23T14:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-07-23T14:00:00.000Z",
                "plantCode": 1026,
                "poCategory": "Accepted",
                "poNumber": 6754893869,
                "podcsDate": "2019-07-23T14:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE SPORTS(CHINA) CO LTD",
                "totalQuantity": 23,
                "trackingNo": 6680310088,
                "unitPrice": 302,
                "vendorName": "MK",
              },
              Object {
                "gacDate": "2019-04-24T13:00:00.000Z",
                "material": "DS2089-005",
                "ogacDate": "2019-04-24T13:00:00.000Z",
                "plantCode": 1023,
                "poCategory": "Accepted",
                "poNumber": 6754891553,
                "podcsDate": "2019-04-24T13:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "AMERICAS SAMPLE PROGRAM",
                "totalQuantity": 49,
                "trackingNo": 6198444888,
                "unitPrice": 39,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-03-23T12:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-03-23T12:00:00.000Z",
                "plantCode": 1029,
                "poCategory": "Accepted",
                "poNumber": 6754892369,
                "podcsDate": "2019-03-23T12:00:00.000Z",
                "season": "Autumn(AT)",
                "shipTo": "NIKE JAPAN GROUP LLC",
                "totalQuantity": 5,
                "trackingNo": 6852545578,
                "unitPrice": 284,
                "vendorName": "XC",
              },
              Object {
                "gacDate": "2019-06-11T22:00:00.000Z",
                "material": "CK6047-002",
                "ogacDate": "2019-06-11T22:00:00.000Z",
                "plantCode": 1071,
                "poCategory": "Accepted",
                "poNumber": 6754893083,
                "podcsDate": "2019-06-11T22:00:00.000Z",
                "season": "Summer(SU)",
                "shipTo": "ASIA SAMPLE PROGRAM",
                "totalQuantity": 98,
                "trackingNo": 6972677938,
                "unitPrice": 80,
                "vendorName": "DW",
              },
            ]
          }
          rowsPerPageOptionsState={
            Array [
              5,
              7,
              10,
              15,
              20,
              25,
            ]
          }
          searchKeyword="LS"
          sortingOrder="asc"
          uniqueKey="poNumber"
        >
          <WithStyles(ForwardRef(TableHead))
            classes={
              Object {
                "root": "tableHead",
              }
            }
          >
            <ForwardRef(TableHead)
              classes={
                Object {
                  "root": "MuiTableHead-root tableHead",
                }
              }
            >
              <thead
                className="MuiTableHead-root tableHead"
              >
                <WithStyles(ForwardRef(TableRow))>
                  <ForwardRef(TableRow)
                    classes={
                      Object {
                        "footer": "MuiTableRow-footer",
                        "head": "MuiTableRow-head",
                        "hover": "MuiTableRow-hover",
                        "root": "MuiTableRow-root",
                        "selected": "Mui-selected",
                      }
                    }
                  >
                    <tr
                      className="MuiTableRow-root MuiTableRow-head"
                    >
                      <WithStyles(ForwardRef(TableCell))
                        padding="checkbox"
                      >
                        <ForwardRef(TableCell)
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          padding="checkbox"
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-paddingCheckbox"
                            scope="col"
                          >
                            <CheckboxItem
                              checked={false}
                              id="tableHeadCheckBoxItem"
                              indeterminate={false}
                              onChange={[MockFunction]}
                            >
                              <div
                                className="checkBoxContainer"
                              >
                                <WithStyles(ForwardRef(FormControlLabel))
                                  className="formControllerContainer"
                                  control={
                                    <WithStyles(ForwardRef(Checkbox))
                                      checked={false}
                                      checkedIcon={<CheckBoxCheckedIcon />}
                                      className="checkBoxContainer"
                                      classes={
                                        Object {
                                          "checked": "checkBoxChecked",
                                          "root": "checkBoxRoot",
                                        }
                                      }
                                      disableRipple={true}
                                      icon={<CheckBoxOutlineBlankIcon />}
                                      id="tableHeadCheckBoxItem"
                                      indeterminate={false}
                                      onChange={[MockFunction]}
                                    />
                                  }
                                >
                                  <ForwardRef(FormControlLabel)
                                    className="formControllerContainer"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      />
                                    }
                                  >
                                    <label
                                      className="MuiFormControlLabel-root formControllerContainer"
                                    >
                                      <WithStyles(ForwardRef(Checkbox))
                                        checked={false}
                                        checkedIcon={<CheckBoxCheckedIcon />}
                                        className="checkBoxContainer"
                                        classes={
                                          Object {
                                            "checked": "checkBoxChecked",
                                            "root": "checkBoxRoot",
                                          }
                                        }
                                        disableRipple={true}
                                        icon={<CheckBoxOutlineBlankIcon />}
                                        id="tableHeadCheckBoxItem"
                                        indeterminate={false}
                                        onChange={[MockFunction]}
                                      >
                                        <ForwardRef(Checkbox)
                                          checked={false}
                                          checkedIcon={<CheckBoxCheckedIcon />}
                                          className="checkBoxContainer"
                                          classes={
                                            Object {
                                              "checked": "Mui-checked checkBoxChecked",
                                              "colorPrimary": "MuiCheckbox-colorPrimary",
                                              "colorSecondary": "MuiCheckbox-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "indeterminate": "MuiCheckbox-indeterminate",
                                              "root": "MuiCheckbox-root checkBoxRoot",
                                            }
                                          }
                                          disableRipple={true}
                                          icon={<CheckBoxOutlineBlankIcon />}
                                          id="tableHeadCheckBoxItem"
                                          indeterminate={false}
                                          onChange={[MockFunction]}
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={
                                              <CheckBoxCheckedIcon
                                                fontSize="default"
                                              />
                                            }
                                            className="checkBoxContainer"
                                            classes={
                                              Object {
                                                "checked": "Mui-checked checkBoxChecked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disableRipple={true}
                                            icon={
                                              <CheckBoxOutlineBlankIcon
                                                fontSize="default"
                                              />
                                            }
                                            id="tableHeadCheckBoxItem"
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                              }
                                            }
                                            onChange={[MockFunction]}
                                            type="checkbox"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={
                                                <CheckBoxCheckedIcon
                                                  fontSize="default"
                                                />
                                              }
                                              className="checkBoxContainer"
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-32 Mui-checked checkBoxChecked",
                                                  "disabled": "PrivateSwitchBase-disabled-33 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-34",
                                                  "root": "PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disableRipple={true}
                                              icon={
                                                <CheckBoxOutlineBlankIcon
                                                  fontSize="default"
                                                />
                                              }
                                              id="tableHeadCheckBoxItem"
                                              inputProps={
                                                Object {
                                                  "data-indeterminate": false,
                                                }
                                              }
                                              onChange={[MockFunction]}
                                              type="checkbox"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                color="secondary"
                                                component="span"
                                                disableRipple={true}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disableRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disableRipple={true}
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disableRipple={true}
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-31 MuiCheckbox-root checkBoxRoot MuiCheckbox-colorSecondary checkBoxContainer MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-34"
                                                            data-indeterminate={false}
                                                            id="tableHeadCheckBoxItem"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <CheckBoxOutlineBlankIcon
                                                            fontSize="default"
                                                          >
                                                            <div
                                                              className="checkBoxBlank"
                                                            />
                                                          </CheckBoxOutlineBlankIcon>
                                                        </span>
                                                        <NoSsr />
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Checkbox)>
                                      </WithStyles(ForwardRef(Checkbox))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          />
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                              </div>
                            </CheckboxItem>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="poNumber"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      P.O#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="trackingNo"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Trading P.O
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="plantCode"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Item#
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="totalQuantity"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      Quantity
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="vendorName"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      VendorName
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="ogacDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      OGACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="podcsDate"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      GACDate
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                      <WithStyles(ForwardRef(TableCell))
                        align="left"
                        key="unitPrice"
                        sortDirection={false}
                      >
                        <ForwardRef(TableCell)
                          align="left"
                          classes={
                            Object {
                              "alignCenter": "MuiTableCell-alignCenter",
                              "alignJustify": "MuiTableCell-alignJustify",
                              "alignLeft": "MuiTableCell-alignLeft",
                              "alignRight": "MuiTableCell-alignRight",
                              "body": "MuiTableCell-body",
                              "footer": "MuiTableCell-footer",
                              "head": "MuiTableCell-head",
                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                              "paddingNone": "MuiTableCell-paddingNone",
                              "root": "MuiTableCell-root",
                              "sizeSmall": "MuiTableCell-sizeSmall",
                              "stickyHeader": "MuiTableCell-stickyHeader",
                            }
                          }
                          sortDirection={false}
                        >
                          <th
                            aria-sort={null}
                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft"
                            scope="col"
                          >
                            <WithStyles(ForwardRef(TableSortLabel))
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "displayName": "ArrowDropDownIcon",
                                  "muiName": "SvgIcon",
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              active={false}
                              direction="asc"
                              id="tableSortLabel"
                              onClick={[Function]}
                            >
                              <ForwardRef(TableSortLabel)
                                IconComponent={
                                  Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "displayName": "ArrowDropDownIcon",
                                    "muiName": "SvgIcon",
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  }
                                }
                                active={false}
                                classes={
                                  Object {
                                    "active": "MuiTableSortLabel-active",
                                    "icon": "MuiTableSortLabel-icon",
                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                    "root": "MuiTableSortLabel-root",
                                  }
                                }
                                direction="asc"
                                id="tableSortLabel"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  className="MuiTableSortLabel-root"
                                  component="span"
                                  disableRipple={true}
                                  id="tableSortLabel"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    className="MuiTableSortLabel-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    id="tableSortLabel"
                                    onClick={[Function]}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiTableSortLabel-root"
                                      id="tableSortLabel"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      NetUnitPrice
                                      <ForwardRef
                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M7 10l5 5 5-5z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      <NoSsr />
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(TableSortLabel)>
                            </WithStyles(ForwardRef(TableSortLabel))>
                          </th>
                        </ForwardRef(TableCell)>
                      </WithStyles(ForwardRef(TableCell))>
                    </tr>
                  </ForwardRef(TableRow)>
                </WithStyles(ForwardRef(TableRow))>
              </thead>
            </ForwardRef(TableHead)>
          </WithStyles(ForwardRef(TableHead))>
        </NikeTableHead>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;
