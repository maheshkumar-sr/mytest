// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Hamburger />  render the component correctly 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <Hamburger
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          getMenuList={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          openHamburger={true}
        >
          <div
            className="hambergerCollaspedContainer border-right"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            tabIndex={0}
          >
            <WithStyles(ForwardRef(List))
              aria-labelledby="nested-list-subheader"
              classes={
                Object {
                  "root": "hambergerCollapsedMenu",
                }
              }
              component="nav"
            >
              <ForwardRef(List)
                aria-labelledby="nested-list-subheader"
                classes={
                  Object {
                    "dense": "MuiList-dense",
                    "padding": "MuiList-padding",
                    "root": "MuiList-root hambergerCollapsedMenu",
                    "subheader": "MuiList-subheader",
                  }
                }
                component="nav"
              >
                <nav
                  aria-labelledby="nested-list-subheader"
                  className="MuiList-root hambergerCollapsedMenu MuiList-padding"
                >
                  <WithStyles(ForwardRef(ListItem))
                    button={true}
                    className="hambergerCollapsedMenuItems"
                    classes={
                      Object {
                        "selected": "hambergerCollapsedMenuItemsSelected",
                      }
                    }
                    key="08460"
                  >
                    <ForwardRef(ListItem)
                      button={true}
                      className="hambergerCollapsedMenuItems"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected hambergerCollapsedMenuItemsSelected",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemIcon))
                              classes={
                                Object {
                                  "root": "hambergerCollapsedMenuIcon",
                                }
                              }
                              key=".$03901"
                            >
                              <ForwardRef(ListItemIcon)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                    "root": "MuiListItemIcon-root hambergerCollapsedMenuIcon",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemIcon-root hambergerCollapsedMenuIcon"
                                >
                                  <img
                                    alt="Dashboard"
                                    src="/images/icon_dashboard.svg"
                                  />
                                </div>
                              </ForwardRef(ListItemIcon)>
                            </WithStyles(ForwardRef(ListItemIcon))>
                            <NoSsr>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </NoSsr>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                  <WithStyles(ForwardRef(ListItem))
                    button={true}
                    className="hambergerCollapsedMenuItems"
                    classes={
                      Object {
                        "selected": "hambergerCollapsedMenuItemsSelected",
                      }
                    }
                    key="17931"
                    selected={true}
                  >
                    <ForwardRef(ListItem)
                      button={true}
                      className="hambergerCollapsedMenuItems"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected hambergerCollapsedMenuItemsSelected",
                        }
                      }
                      selected={true}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemIcon))
                              classes={
                                Object {
                                  "root": "hambergerCollapsedMenuIcon",
                                }
                              }
                              key=".$13062"
                            >
                              <ForwardRef(ListItemIcon)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                    "root": "MuiListItemIcon-root hambergerCollapsedMenuIcon",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemIcon-root hambergerCollapsedMenuIcon"
                                >
                                  <img
                                    alt="Processing"
                                    src="/images/icon_poprocessing.svg"
                                  />
                                </div>
                              </ForwardRef(ListItemIcon)>
                            </WithStyles(ForwardRef(ListItemIcon))>
                            <NoSsr>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </NoSsr>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                </nav>
              </ForwardRef(List)>
            </WithStyles(ForwardRef(List))>
          </div>
          <WithStyles(ForwardRef(Divider))
            className="verticalDivider"
            flexItem={true}
            orientation="vertical"
          >
            <ForwardRef(Divider)
              className="verticalDivider"
              classes={
                Object {
                  "absolute": "MuiDivider-absolute",
                  "flexItem": "MuiDivider-flexItem",
                  "inset": "MuiDivider-inset",
                  "light": "MuiDivider-light",
                  "middle": "MuiDivider-middle",
                  "root": "MuiDivider-root",
                  "vertical": "MuiDivider-vertical",
                }
              }
              flexItem={true}
              orientation="vertical"
            >
              <hr
                className="MuiDivider-root verticalDivider MuiDivider-flexItem MuiDivider-vertical"
              />
            </ForwardRef(Divider)>
          </WithStyles(ForwardRef(Divider))>
          <WithStyles(ForwardRef(Drawer))
            PaperProps={
              Object {
                "className": "ncss-col-sm-2 drawerPaperClass",
              }
            }
            className="ncss-row drawerContainer"
            onClose={[Function]}
            open={true}
          >
            <ForwardRef(Drawer)
              PaperProps={
                Object {
                  "className": "ncss-col-sm-2 drawerPaperClass",
                }
              }
              className="ncss-row drawerContainer"
              classes={
                Object {
                  "docked": "MuiDrawer-docked",
                  "modal": "MuiDrawer-modal",
                  "paper": "MuiDrawer-paper",
                  "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                  "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                  "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                  "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                  "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                  "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                  "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                  "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                  "root": "MuiDrawer-root",
                }
              }
              onClose={[Function]}
              open={true}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                onClose={[Function]}
                open={true}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body
                        style="padding-right: 0px; overflow: hidden;"
                      >
                        <div
                          class="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                        >
                          <div
                            aria-hidden="true"
                            class="MuiBackdrop-root"
                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                          />
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass MuiPaper-elevation16"
                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                            tabindex="-1"
                          >
                            <div
                              class="hambergerExpandedContainer"
                              role="presentation"
                            >
                              <nav
                                aria-labelledby="nested-list-subheader"
                                class="MuiList-root hambergerExpendedMenu MuiList-padding MuiList-subheader"
                              >
                                <div
                                  class="MuiListSubheader-root listSubheader MuiListSubheader-sticky MuiListSubheader-gutters"
                                  id="nested-list-subheader"
                                >
                                  <div
                                    class="MuiAvatar-root listSubheaderAvatar MuiAvatar-circle"
                                  >
                                    <img
                                      alt="Nike Logo"
                                      class="MuiAvatar-img"
                                      src="/images/logo/logo.png"
                                    />
                                  </div>
                                </div>
                                <hr
                                  class="MuiDivider-root verticalDivider"
                                />
                                <div
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                  role="button"
                                  tabindex="0"
                                >
                                  <div
                                    class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                  >
                                    <img
                                      alt="Dashboard"
                                      src="/images/icon_dashboard.svg"
                                    />
                                  </div>
                                  <div
                                    class="MuiListItemText-root hambergerExpandedMenuItemText"
                                  >
                                    <span
                                      class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      Dashboard
                                    </span>
                                  </div>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </div>
                                <div
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                  role="button"
                                  tabindex="0"
                                >
                                  <div
                                    class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                  >
                                    <img
                                      alt="Processing"
                                      src="/images/icon_poprocessing.svg"
                                    />
                                  </div>
                                  <div
                                    class="MuiListItemText-root hambergerExpandedMenuItemText"
                                  >
                                    <span
                                      class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      P.O. Processing
                                    </span>
                                  </div>
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                                    />
                                  </svg>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </div>
                                <div
                                  class="MuiCollapse-container MuiCollapse-entered"
                                  style="min-height: 0px;"
                                >
                                  <div
                                    class="MuiCollapse-wrapper"
                                  >
                                    <div
                                      class="MuiCollapse-wrapperInner"
                                    >
                                      <div
                                        class="MuiList-root"
                                      >
                                        <div
                                          aria-disabled="false"
                                          class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                          >
                                            <img
                                              alt=""
                                              src=""
                                            />
                                          </div>
                                          <div
                                            class="MuiListItemText-root hambergerExpandedMenuItemText"
                                          >
                                            <span
                                              class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                            >
                                              P.O Search
                                            </span>
                                          </div>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </nav>
                            </div>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "zIndex": 1300,
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Backdrop))
                        onClick={[Function]}
                        open={true}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <ForwardRef(Backdrop)
                          classes={
                            Object {
                              "invisible": "MuiBackdrop-invisible",
                              "root": "MuiBackdrop-root",
                            }
                          }
                          onClick={[Function]}
                          open={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Fade)
                            in={true}
                            onClick={[Function]}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onClick={[Function]}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                aria-hidden={true}
                                className="MuiBackdrop-root"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                    "visibility": undefined,
                                  }
                                }
                              />
                            </Transition>
                          </ForwardRef(Fade)>
                        </ForwardRef(Backdrop)>
                      </WithStyles(ForwardRef(Backdrop))>
                      <TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={true}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Slide)
                          appear={true}
                          direction="right"
                          in={true}
                          onEnter={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass"
                              elevation={16}
                              square={true}
                              style={
                                Object {
                                  "visibility": undefined,
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={16}
                                square={true}
                                style={
                                  Object {
                                    "visibility": undefined,
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass MuiPaper-elevation16"
                                  style={
                                    Object {
                                      "visibility": undefined,
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <div
                                    className="hambergerExpandedContainer"
                                    role="presentation"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      aria-labelledby="nested-list-subheader"
                                      classes={
                                        Object {
                                          "root": "hambergerExpendedMenu",
                                        }
                                      }
                                      component="nav"
                                      subheader={
                                        <WithStyles(ForwardRef(ListSubheader))
                                          classes={
                                            Object {
                                              "root": "listSubheader",
                                            }
                                          }
                                          component="div"
                                          id="nested-list-subheader"
                                        >
                                          <WithStyles(ForwardRef(Avatar))
                                            alt="Nike Logo"
                                            classes={
                                              Object {
                                                "root": "listSubheaderAvatar",
                                              }
                                            }
                                            src="/images/logo/logo.png"
                                          />
                                        </WithStyles(ForwardRef(ListSubheader))>
                                      }
                                    >
                                      <ForwardRef(List)
                                        aria-labelledby="nested-list-subheader"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root hambergerExpendedMenu",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        component="nav"
                                        subheader={
                                          <WithStyles(ForwardRef(ListSubheader))
                                            classes={
                                              Object {
                                                "root": "listSubheader",
                                              }
                                            }
                                            component="div"
                                            id="nested-list-subheader"
                                          >
                                            <WithStyles(ForwardRef(Avatar))
                                              alt="Nike Logo"
                                              classes={
                                                Object {
                                                  "root": "listSubheaderAvatar",
                                                }
                                              }
                                              src="/images/logo/logo.png"
                                            />
                                          </WithStyles(ForwardRef(ListSubheader))>
                                        }
                                      >
                                        <nav
                                          aria-labelledby="nested-list-subheader"
                                          className="MuiList-root hambergerExpendedMenu MuiList-padding MuiList-subheader"
                                        >
                                          <WithStyles(ForwardRef(ListSubheader))
                                            classes={
                                              Object {
                                                "root": "listSubheader",
                                              }
                                            }
                                            component="div"
                                            id="nested-list-subheader"
                                          >
                                            <ForwardRef(ListSubheader)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiListSubheader-colorInherit",
                                                  "colorPrimary": "MuiListSubheader-colorPrimary",
                                                  "gutters": "MuiListSubheader-gutters",
                                                  "inset": "MuiListSubheader-inset",
                                                  "root": "MuiListSubheader-root listSubheader",
                                                  "sticky": "MuiListSubheader-sticky",
                                                }
                                              }
                                              component="div"
                                              id="nested-list-subheader"
                                            >
                                              <div
                                                className="MuiListSubheader-root listSubheader MuiListSubheader-sticky MuiListSubheader-gutters"
                                                id="nested-list-subheader"
                                              >
                                                <WithStyles(ForwardRef(Avatar))
                                                  alt="Nike Logo"
                                                  classes={
                                                    Object {
                                                      "root": "listSubheaderAvatar",
                                                    }
                                                  }
                                                  src="/images/logo/logo.png"
                                                >
                                                  <ForwardRef(Avatar)
                                                    alt="Nike Logo"
                                                    classes={
                                                      Object {
                                                        "circle": "MuiAvatar-circle",
                                                        "colorDefault": "MuiAvatar-colorDefault",
                                                        "fallback": "MuiAvatar-fallback",
                                                        "img": "MuiAvatar-img",
                                                        "root": "MuiAvatar-root listSubheaderAvatar",
                                                        "rounded": "MuiAvatar-rounded",
                                                        "square": "MuiAvatar-square",
                                                      }
                                                    }
                                                    src="/images/logo/logo.png"
                                                  >
                                                    <div
                                                      className="MuiAvatar-root listSubheaderAvatar MuiAvatar-circle"
                                                    >
                                                      <img
                                                        alt="Nike Logo"
                                                        className="MuiAvatar-img"
                                                        src="/images/logo/logo.png"
                                                      />
                                                    </div>
                                                  </ForwardRef(Avatar)>
                                                </WithStyles(ForwardRef(Avatar))>
                                              </div>
                                            </ForwardRef(ListSubheader)>
                                          </WithStyles(ForwardRef(ListSubheader))>
                                          <WithStyles(ForwardRef(Divider))
                                            className="verticalDivider"
                                          >
                                            <ForwardRef(Divider)
                                              className="verticalDivider"
                                              classes={
                                                Object {
                                                  "absolute": "MuiDivider-absolute",
                                                  "flexItem": "MuiDivider-flexItem",
                                                  "inset": "MuiDivider-inset",
                                                  "light": "MuiDivider-light",
                                                  "middle": "MuiDivider-middle",
                                                  "root": "MuiDivider-root",
                                                  "vertical": "MuiDivider-vertical",
                                                }
                                              }
                                            >
                                              <hr
                                                className="MuiDivider-root verticalDivider"
                                              />
                                            </ForwardRef(Divider)>
                                          </WithStyles(ForwardRef(Divider))>
                                          <WithStyles(ForwardRef(ListItem))
                                            button={true}
                                            className="hambergerExpandedMenuItems"
                                            classes={
                                              Object {
                                                "selected": "hambergerExpandedMenuItemsSelected",
                                              }
                                            }
                                            key="01740"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ListItem)
                                              button={true}
                                              className="hambergerExpandedMenuItems"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                  "button": "MuiListItem-button",
                                                  "container": "MuiListItem-container",
                                                  "dense": "MuiListItem-dense",
                                                  "disabled": "Mui-disabled",
                                                  "divider": "MuiListItem-divider",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "gutters": "MuiListItem-gutters",
                                                  "root": "MuiListItem-root",
                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                  "selected": "Mui-selected hambergerExpandedMenuItemsSelected",
                                                }
                                              }
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="div"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <div
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ListItemIcon))
                                                      classes={
                                                        Object {
                                                          "root": "hambergerExpandedMenuIcon",
                                                        }
                                                      }
                                                      key=".$06412"
                                                    >
                                                      <ForwardRef(ListItemIcon)
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                            "root": "MuiListItemIcon-root hambergerExpandedMenuIcon",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                                        >
                                                          <img
                                                            alt="Dashboard"
                                                            src="/images/icon_dashboard.svg"
                                                          />
                                                        </div>
                                                      </ForwardRef(ListItemIcon)>
                                                    </WithStyles(ForwardRef(ListItemIcon))>
                                                    <WithStyles(ForwardRef(ListItemText))
                                                      classes={
                                                        Object {
                                                          "primary": "menuItemTextPrimary",
                                                          "root": "hambergerExpandedMenuItemText",
                                                        }
                                                      }
                                                      key=".$08927"
                                                      primary="Dashboard"
                                                    >
                                                      <ForwardRef(ListItemText)
                                                        classes={
                                                          Object {
                                                            "dense": "MuiListItemText-dense",
                                                            "inset": "MuiListItemText-inset",
                                                            "multiline": "MuiListItemText-multiline",
                                                            "primary": "MuiListItemText-primary menuItemTextPrimary",
                                                            "root": "MuiListItemText-root hambergerExpandedMenuItemText",
                                                            "secondary": "MuiListItemText-secondary",
                                                          }
                                                        }
                                                        primary="Dashboard"
                                                      >
                                                        <div
                                                          className="MuiListItemText-root hambergerExpandedMenuItemText"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiListItemText-primary menuItemTextPrimary"
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiListItemText-primary menuItemTextPrimary"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <span
                                                                className="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                                              >
                                                                Dashboard
                                                              </span>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(ListItemText)>
                                                    </WithStyles(ForwardRef(ListItemText))>
                                                    <NoSsr>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </NoSsr>
                                                  </div>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(ListItem)>
                                          </WithStyles(ForwardRef(ListItem))>
                                          <WithStyles(ForwardRef(ListItem))
                                            button={true}
                                            className="hambergerExpandedMenuItems"
                                            classes={
                                              Object {
                                                "selected": "hambergerExpandedMenuItemsSelected",
                                              }
                                            }
                                            key="15728"
                                            onClick={[Function]}
                                            selected={true}
                                          >
                                            <ForwardRef(ListItem)
                                              button={true}
                                              className="hambergerExpandedMenuItems"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                  "button": "MuiListItem-button",
                                                  "container": "MuiListItem-container",
                                                  "dense": "MuiListItem-dense",
                                                  "disabled": "Mui-disabled",
                                                  "divider": "MuiListItem-divider",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "gutters": "MuiListItem-gutters",
                                                  "root": "MuiListItem-root",
                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                  "selected": "Mui-selected hambergerExpandedMenuItemsSelected",
                                                }
                                              }
                                              onClick={[Function]}
                                              selected={true}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="div"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <div
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ListItemIcon))
                                                      classes={
                                                        Object {
                                                          "root": "hambergerExpandedMenuIcon",
                                                        }
                                                      }
                                                      key=".$12698"
                                                    >
                                                      <ForwardRef(ListItemIcon)
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                            "root": "MuiListItemIcon-root hambergerExpandedMenuIcon",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                                        >
                                                          <img
                                                            alt="Processing"
                                                            src="/images/icon_poprocessing.svg"
                                                          />
                                                        </div>
                                                      </ForwardRef(ListItemIcon)>
                                                    </WithStyles(ForwardRef(ListItemIcon))>
                                                    <WithStyles(ForwardRef(ListItemText))
                                                      classes={
                                                        Object {
                                                          "primary": "menuItemTextPrimary",
                                                          "root": "hambergerExpandedMenuItemText",
                                                        }
                                                      }
                                                      key=".$17223"
                                                      primary="P.O. Processing"
                                                    >
                                                      <ForwardRef(ListItemText)
                                                        classes={
                                                          Object {
                                                            "dense": "MuiListItemText-dense",
                                                            "inset": "MuiListItemText-inset",
                                                            "multiline": "MuiListItemText-multiline",
                                                            "primary": "MuiListItemText-primary menuItemTextPrimary",
                                                            "root": "MuiListItemText-root hambergerExpandedMenuItemText",
                                                            "secondary": "MuiListItemText-secondary",
                                                          }
                                                        }
                                                        primary="P.O. Processing"
                                                      >
                                                        <div
                                                          className="MuiListItemText-root hambergerExpandedMenuItemText"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiListItemText-primary menuItemTextPrimary"
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiListItemText-primary menuItemTextPrimary"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <span
                                                                className="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                                              >
                                                                P.O. Processing
                                                              </span>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(ListItemText)>
                                                    </WithStyles(ForwardRef(ListItemText))>
                                                    <ForwardRef
                                                      key=".$19105"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef>
                                                    <NoSsr>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </NoSsr>
                                                  </div>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(ListItem)>
                                          </WithStyles(ForwardRef(ListItem))>
                                          <WithStyles(ForwardRef(Collapse))
                                            in={true}
                                            key="02949"
                                            timeout="auto"
                                          >
                                            <ForwardRef(Collapse)
                                              classes={
                                                Object {
                                                  "container": "MuiCollapse-container",
                                                  "entered": "MuiCollapse-entered",
                                                  "hidden": "MuiCollapse-hidden",
                                                  "wrapper": "MuiCollapse-wrapper",
                                                  "wrapperInner": "MuiCollapse-wrapperInner",
                                                }
                                              }
                                              in={true}
                                              timeout="auto"
                                            >
                                              <Transition
                                                addEndListener={[Function]}
                                                appear={false}
                                                enter={true}
                                                exit={true}
                                                in={true}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={null}
                                                unmountOnExit={false}
                                              >
                                                <div
                                                  className="MuiCollapse-container MuiCollapse-entered"
                                                  style={
                                                    Object {
                                                      "minHeight": "0px",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapper"
                                                  >
                                                    <div
                                                      className="MuiCollapse-wrapperInner"
                                                    >
                                                      <WithStyles(ForwardRef(List))
                                                        component="div"
                                                        disablePadding={true}
                                                        key="04045"
                                                      >
                                                        <ForwardRef(List)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiList-dense",
                                                              "padding": "MuiList-padding",
                                                              "root": "MuiList-root",
                                                              "subheader": "MuiList-subheader",
                                                            }
                                                          }
                                                          component="div"
                                                          disablePadding={true}
                                                        >
                                                          <div
                                                            className="MuiList-root"
                                                          >
                                                            <WithStyles(ForwardRef(ListItem))
                                                              button={true}
                                                              className="hambergerExpandedMenuItems"
                                                              classes={
                                                                Object {
                                                                  "selected": "hambergerExpandedMenuItemsSelected",
                                                                }
                                                              }
                                                              key="0594"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(ListItem)
                                                                button={true}
                                                                className="hambergerExpandedMenuItems"
                                                                classes={
                                                                  Object {
                                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                    "button": "MuiListItem-button",
                                                                    "container": "MuiListItem-container",
                                                                    "dense": "MuiListItem-dense",
                                                                    "disabled": "Mui-disabled",
                                                                    "divider": "MuiListItem-divider",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "gutters": "MuiListItem-gutters",
                                                                    "root": "MuiListItem-root",
                                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                                    "selected": "Mui-selected hambergerExpandedMenuItemsSelected",
                                                                  }
                                                                }
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                                  component="div"
                                                                  disabled={false}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="div"
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <div
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <WithStyles(ForwardRef(ListItemIcon))
                                                                        classes={
                                                                          Object {
                                                                            "root": "hambergerExpandedMenuIcon",
                                                                          }
                                                                        }
                                                                        key=".$05638"
                                                                      >
                                                                        <ForwardRef(ListItemIcon)
                                                                          classes={
                                                                            Object {
                                                                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                                              "root": "MuiListItemIcon-root hambergerExpandedMenuIcon",
                                                                            }
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                                                          >
                                                                            <img
                                                                              alt=""
                                                                              src=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(ListItemIcon)>
                                                                      </WithStyles(ForwardRef(ListItemIcon))>
                                                                      <WithStyles(ForwardRef(ListItemText))
                                                                        classes={
                                                                          Object {
                                                                            "primary": "menuItemTextPrimary",
                                                                            "root": "hambergerExpandedMenuItemText",
                                                                          }
                                                                        }
                                                                        key=".$08204"
                                                                        primary="P.O Search"
                                                                      >
                                                                        <ForwardRef(ListItemText)
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiListItemText-dense",
                                                                              "inset": "MuiListItemText-inset",
                                                                              "multiline": "MuiListItemText-multiline",
                                                                              "primary": "MuiListItemText-primary menuItemTextPrimary",
                                                                              "root": "MuiListItemText-root hambergerExpandedMenuItemText",
                                                                              "secondary": "MuiListItemText-secondary",
                                                                            }
                                                                          }
                                                                          primary="P.O Search"
                                                                        >
                                                                          <div
                                                                            className="MuiListItemText-root hambergerExpandedMenuItemText"
                                                                          >
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiListItemText-primary menuItemTextPrimary"
                                                                              component="span"
                                                                              display="block"
                                                                              variant="body1"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiListItemText-primary menuItemTextPrimary"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                component="span"
                                                                                display="block"
                                                                                variant="body1"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                                                                >
                                                                                  P.O Search
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                          </div>
                                                                        </ForwardRef(ListItemText)>
                                                                      </WithStyles(ForwardRef(ListItemText))>
                                                                      <NoSsr>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </NoSsr>
                                                                    </div>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(ListItem)>
                                                            </WithStyles(ForwardRef(ListItem))>
                                                          </div>
                                                        </ForwardRef(List)>
                                                      </WithStyles(ForwardRef(List))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </Transition>
                                            </ForwardRef(Collapse)>
                                          </WithStyles(ForwardRef(Collapse))>
                                        </nav>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </div>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Slide)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Drawer)>
          </WithStyles(ForwardRef(Drawer))>
        </Hamburger>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;

exports[`<Hamburger />  render the component correctly 2`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <Hamburger
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          getMenuList={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          openHamburger={false}
        >
          <div
            className="hambergerCollaspedContainer border-right"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            tabIndex={0}
          >
            <WithStyles(ForwardRef(List))
              aria-labelledby="nested-list-subheader"
              classes={
                Object {
                  "root": "hambergerCollapsedMenu",
                }
              }
              component="nav"
            >
              <ForwardRef(List)
                aria-labelledby="nested-list-subheader"
                classes={
                  Object {
                    "dense": "MuiList-dense",
                    "padding": "MuiList-padding",
                    "root": "MuiList-root hambergerCollapsedMenu",
                    "subheader": "MuiList-subheader",
                  }
                }
                component="nav"
              >
                <nav
                  aria-labelledby="nested-list-subheader"
                  className="MuiList-root hambergerCollapsedMenu MuiList-padding"
                >
                  <WithStyles(ForwardRef(ListItem))
                    button={true}
                    className="hambergerCollapsedMenuItems"
                    classes={
                      Object {
                        "selected": "hambergerCollapsedMenuItemsSelected",
                      }
                    }
                    key="02930"
                  >
                    <ForwardRef(ListItem)
                      button={true}
                      className="hambergerCollapsedMenuItems"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected hambergerCollapsedMenuItemsSelected",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemIcon))
                              classes={
                                Object {
                                  "root": "hambergerCollapsedMenuIcon",
                                }
                              }
                              key=".$02697"
                            >
                              <ForwardRef(ListItemIcon)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                    "root": "MuiListItemIcon-root hambergerCollapsedMenuIcon",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemIcon-root hambergerCollapsedMenuIcon"
                                >
                                  <img
                                    alt="Dashboard"
                                    src="/images/icon_dashboard.svg"
                                  />
                                </div>
                              </ForwardRef(ListItemIcon)>
                            </WithStyles(ForwardRef(ListItemIcon))>
                            <NoSsr>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </NoSsr>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                  <WithStyles(ForwardRef(ListItem))
                    button={true}
                    className="hambergerCollapsedMenuItems"
                    classes={
                      Object {
                        "selected": "hambergerCollapsedMenuItemsSelected",
                      }
                    }
                    key="18037"
                    selected={true}
                  >
                    <ForwardRef(ListItem)
                      button={true}
                      className="hambergerCollapsedMenuItems"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected hambergerCollapsedMenuItemsSelected",
                        }
                      }
                      selected={true}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemIcon))
                              classes={
                                Object {
                                  "root": "hambergerCollapsedMenuIcon",
                                }
                              }
                              key=".$16939"
                            >
                              <ForwardRef(ListItemIcon)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                    "root": "MuiListItemIcon-root hambergerCollapsedMenuIcon",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemIcon-root hambergerCollapsedMenuIcon"
                                >
                                  <img
                                    alt="Processing"
                                    src="/images/icon_poprocessing.svg"
                                  />
                                </div>
                              </ForwardRef(ListItemIcon)>
                            </WithStyles(ForwardRef(ListItemIcon))>
                            <NoSsr>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </NoSsr>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                </nav>
              </ForwardRef(List)>
            </WithStyles(ForwardRef(List))>
          </div>
          <WithStyles(ForwardRef(Divider))
            className="verticalDivider"
            flexItem={true}
            orientation="vertical"
          >
            <ForwardRef(Divider)
              className="verticalDivider"
              classes={
                Object {
                  "absolute": "MuiDivider-absolute",
                  "flexItem": "MuiDivider-flexItem",
                  "inset": "MuiDivider-inset",
                  "light": "MuiDivider-light",
                  "middle": "MuiDivider-middle",
                  "root": "MuiDivider-root",
                  "vertical": "MuiDivider-vertical",
                }
              }
              flexItem={true}
              orientation="vertical"
            >
              <hr
                className="MuiDivider-root verticalDivider MuiDivider-flexItem MuiDivider-vertical"
              />
            </ForwardRef(Divider)>
          </WithStyles(ForwardRef(Divider))>
          <WithStyles(ForwardRef(Drawer))
            PaperProps={
              Object {
                "className": "ncss-col-sm-2 drawerPaperClass",
              }
            }
            className="ncss-row drawerContainer"
            onClose={[Function]}
            open={false}
          >
            <ForwardRef(Drawer)
              PaperProps={
                Object {
                  "className": "ncss-col-sm-2 drawerPaperClass",
                }
              }
              className="ncss-row drawerContainer"
              classes={
                Object {
                  "docked": "MuiDrawer-docked",
                  "modal": "MuiDrawer-modal",
                  "paper": "MuiDrawer-paper",
                  "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                  "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                  "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                  "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                  "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                  "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                  "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                  "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                  "root": "MuiDrawer-root",
                }
              }
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                onClose={[Function]}
                open={false}
              />
            </ForwardRef(Drawer)>
          </WithStyles(ForwardRef(Drawer))>
        </Hamburger>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;

exports[`<Hamburger />  render the component correctly 3`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <ThemeProvider>
    <StaticRouter
      context={Object {}}
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        staticContext={Object {}}
      >
        <Hamburger
          closeDrawer={[MockFunction]}
          closeHamburger={[MockFunction]}
          getMenuList={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          history={
            Object {
              "action": "PUSH",
              "block": [MockFunction],
              "createHref": [MockFunction],
              "go": [MockFunction],
              "goBack": [MockFunction],
              "goForward": [MockFunction],
              "listen": [MockFunction],
              "location": Object {
                "hash": "",
                "key": "pvyaje",
                "pathname": "/search",
                "search": "",
                "state": undefined,
              },
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          menuListOptions={
            Array [
              Object {
                "link": "/",
                "name": "Dashboard",
                "path": Object {
                  "alt": "Dashboard",
                  "src": "/images/icon_dashboard.svg",
                },
              },
              Object {
                "active": true,
                "link": "/poProcessing",
                "name": "P.O. Processing",
                "nested": Array [
                  Object {
                    "link": "/search",
                    "name": "P.O Search",
                    "path": Object {
                      "alt": "",
                      "src": "",
                    },
                  },
                ],
                "path": Object {
                  "alt": "Processing",
                  "src": "/images/icon_poprocessing.svg",
                },
              },
            ]
          }
          openHamburger={true}
        >
          <div
            className="hambergerCollaspedContainer border-right"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            tabIndex={0}
          >
            <WithStyles(ForwardRef(List))
              aria-labelledby="nested-list-subheader"
              classes={
                Object {
                  "root": "hambergerCollapsedMenu",
                }
              }
              component="nav"
            >
              <ForwardRef(List)
                aria-labelledby="nested-list-subheader"
                classes={
                  Object {
                    "dense": "MuiList-dense",
                    "padding": "MuiList-padding",
                    "root": "MuiList-root hambergerCollapsedMenu",
                    "subheader": "MuiList-subheader",
                  }
                }
                component="nav"
              >
                <nav
                  aria-labelledby="nested-list-subheader"
                  className="MuiList-root hambergerCollapsedMenu MuiList-padding"
                >
                  <WithStyles(ForwardRef(ListItem))
                    button={true}
                    className="hambergerCollapsedMenuItems"
                    classes={
                      Object {
                        "selected": "hambergerCollapsedMenuItemsSelected",
                      }
                    }
                    key="03337"
                  >
                    <ForwardRef(ListItem)
                      button={true}
                      className="hambergerCollapsedMenuItems"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected hambergerCollapsedMenuItemsSelected",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemIcon))
                              classes={
                                Object {
                                  "root": "hambergerCollapsedMenuIcon",
                                }
                              }
                              key=".$09721"
                            >
                              <ForwardRef(ListItemIcon)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                    "root": "MuiListItemIcon-root hambergerCollapsedMenuIcon",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemIcon-root hambergerCollapsedMenuIcon"
                                >
                                  <img
                                    alt="Dashboard"
                                    src="/images/icon_dashboard.svg"
                                  />
                                </div>
                              </ForwardRef(ListItemIcon)>
                            </WithStyles(ForwardRef(ListItemIcon))>
                            <NoSsr>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </NoSsr>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                  <WithStyles(ForwardRef(ListItem))
                    button={true}
                    className="hambergerCollapsedMenuItems"
                    classes={
                      Object {
                        "selected": "hambergerCollapsedMenuItemsSelected",
                      }
                    }
                    key="12431"
                    selected={true}
                  >
                    <ForwardRef(ListItem)
                      button={true}
                      className="hambergerCollapsedMenuItems"
                      classes={
                        Object {
                          "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                          "button": "MuiListItem-button",
                          "container": "MuiListItem-container",
                          "dense": "MuiListItem-dense",
                          "disabled": "Mui-disabled",
                          "divider": "MuiListItem-divider",
                          "focusVisible": "Mui-focusVisible",
                          "gutters": "MuiListItem-gutters",
                          "root": "MuiListItem-root",
                          "secondaryAction": "MuiListItem-secondaryAction",
                          "selected": "Mui-selected hambergerCollapsedMenuItemsSelected",
                        }
                      }
                      selected={true}
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                        component="div"
                        disabled={false}
                        focusVisibleClassName="Mui-focusVisible"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="div"
                          disabled={false}
                          focusVisibleClassName="Mui-focusVisible"
                        >
                          <div
                            aria-disabled={false}
                            className="MuiButtonBase-root MuiListItem-root hambergerCollapsedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerCollapsedMenuItemsSelected"
                            onBlur={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <WithStyles(ForwardRef(ListItemIcon))
                              classes={
                                Object {
                                  "root": "hambergerCollapsedMenuIcon",
                                }
                              }
                              key=".$15506"
                            >
                              <ForwardRef(ListItemIcon)
                                classes={
                                  Object {
                                    "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                    "root": "MuiListItemIcon-root hambergerCollapsedMenuIcon",
                                  }
                                }
                              >
                                <div
                                  className="MuiListItemIcon-root hambergerCollapsedMenuIcon"
                                >
                                  <img
                                    alt="Processing"
                                    src="/images/icon_poprocessing.svg"
                                  />
                                </div>
                              </ForwardRef(ListItemIcon)>
                            </WithStyles(ForwardRef(ListItemIcon))>
                            <NoSsr>
                              <WithStyles(memo)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </NoSsr>
                          </div>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(ListItem)>
                  </WithStyles(ForwardRef(ListItem))>
                </nav>
              </ForwardRef(List)>
            </WithStyles(ForwardRef(List))>
          </div>
          <WithStyles(ForwardRef(Divider))
            className="verticalDivider"
            flexItem={true}
            orientation="vertical"
          >
            <ForwardRef(Divider)
              className="verticalDivider"
              classes={
                Object {
                  "absolute": "MuiDivider-absolute",
                  "flexItem": "MuiDivider-flexItem",
                  "inset": "MuiDivider-inset",
                  "light": "MuiDivider-light",
                  "middle": "MuiDivider-middle",
                  "root": "MuiDivider-root",
                  "vertical": "MuiDivider-vertical",
                }
              }
              flexItem={true}
              orientation="vertical"
            >
              <hr
                className="MuiDivider-root verticalDivider MuiDivider-flexItem MuiDivider-vertical"
              />
            </ForwardRef(Divider)>
          </WithStyles(ForwardRef(Divider))>
          <WithStyles(ForwardRef(Drawer))
            PaperProps={
              Object {
                "className": "ncss-col-sm-2 drawerPaperClass",
              }
            }
            className="ncss-row drawerContainer"
            onClose={[Function]}
            open={true}
          >
            <ForwardRef(Drawer)
              PaperProps={
                Object {
                  "className": "ncss-col-sm-2 drawerPaperClass",
                }
              }
              className="ncss-row drawerContainer"
              classes={
                Object {
                  "docked": "MuiDrawer-docked",
                  "modal": "MuiDrawer-modal",
                  "paper": "MuiDrawer-paper",
                  "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                  "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                  "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                  "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                  "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                  "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                  "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                  "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                  "root": "MuiDrawer-root",
                }
              }
              onClose={[Function]}
              open={true}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "activatedOpacity": 0.12,
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "disabledOpacity": 0.38,
                            "focus": "rgba(0, 0, 0, 0.12)",
                            "focusOpacity": 0.12,
                            "hover": "rgba(0, 0, 0, 0.04)",
                            "hoverOpacity": 0.04,
                            "selected": "rgba(0, 0, 0, 0.08)",
                            "selectedOpacity": 0.08,
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "info": Object {
                            "contrastText": "#fff",
                            "dark": "#1976d2",
                            "light": "#64b5f6",
                            "main": "#2196f3",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "success": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#388e3c",
                            "light": "#81c784",
                            "main": "#4caf50",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                          "warning": Object {
                            "contrastText": "rgba(0, 0, 0, 0.87)",
                            "dark": "#f57c00",
                            "light": "#ffb74d",
                            "main": "#ff9800",
                          },
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1.167,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1.2,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.167,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.235,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.334,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                onClose={[Function]}
                open={true}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body
                        style="padding-right: 0px; overflow: hidden;"
                      >
                        <div
                          aria-hidden="true"
                          class="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                        >
                          <div
                            aria-hidden="true"
                            class="MuiBackdrop-root"
                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                          />
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass MuiPaper-elevation16"
                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                            tabindex="-1"
                          >
                            <div
                              class="hambergerExpandedContainer"
                              role="presentation"
                            >
                              <nav
                                aria-labelledby="nested-list-subheader"
                                class="MuiList-root hambergerExpendedMenu MuiList-padding MuiList-subheader"
                              >
                                <div
                                  class="MuiListSubheader-root listSubheader MuiListSubheader-sticky MuiListSubheader-gutters"
                                  id="nested-list-subheader"
                                >
                                  <div
                                    class="MuiAvatar-root listSubheaderAvatar MuiAvatar-circle"
                                  >
                                    <img
                                      alt="Nike Logo"
                                      class="MuiAvatar-img"
                                      src="/images/logo/logo.png"
                                    />
                                  </div>
                                </div>
                                <hr
                                  class="MuiDivider-root verticalDivider"
                                />
                                <div
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                  role="button"
                                  tabindex="0"
                                >
                                  <div
                                    class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                  >
                                    <img
                                      alt="Dashboard"
                                      src="/images/icon_dashboard.svg"
                                    />
                                  </div>
                                  <div
                                    class="MuiListItemText-root hambergerExpandedMenuItemText"
                                  >
                                    <span
                                      class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      Dashboard
                                    </span>
                                  </div>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </div>
                                <div
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                  role="button"
                                  tabindex="0"
                                >
                                  <div
                                    class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                  >
                                    <img
                                      alt="Processing"
                                      src="/images/icon_poprocessing.svg"
                                    />
                                  </div>
                                  <div
                                    class="MuiListItemText-root hambergerExpandedMenuItemText"
                                  >
                                    <span
                                      class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      P.O. Processing
                                    </span>
                                  </div>
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                                    />
                                  </svg>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </div>
                                <div
                                  class="MuiCollapse-container MuiCollapse-entered"
                                  style="min-height: 0px;"
                                >
                                  <div
                                    class="MuiCollapse-wrapper"
                                  >
                                    <div
                                      class="MuiCollapse-wrapperInner"
                                    >
                                      <div
                                        class="MuiList-root"
                                      >
                                        <div
                                          aria-disabled="false"
                                          class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                          >
                                            <img
                                              alt=""
                                              src=""
                                            />
                                          </div>
                                          <div
                                            class="MuiListItemText-root hambergerExpandedMenuItemText"
                                          >
                                            <span
                                              class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                            >
                                              P.O Search
                                            </span>
                                          </div>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </nav>
                            </div>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          class="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                        >
                          <div
                            aria-hidden="true"
                            class="MuiBackdrop-root"
                            style="opacity: 1; webkit-transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; transition: opacity 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;"
                          />
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass MuiPaper-elevation16"
                            style="webkit-transform: none; transform: none; webkit-transition: -webkit-transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms; transition: transform 225ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;"
                            tabindex="-1"
                          >
                            <div
                              class="hambergerExpandedContainer"
                              role="presentation"
                            >
                              <nav
                                aria-labelledby="nested-list-subheader"
                                class="MuiList-root hambergerExpendedMenu MuiList-padding MuiList-subheader"
                              >
                                <div
                                  class="MuiListSubheader-root listSubheader MuiListSubheader-sticky MuiListSubheader-gutters"
                                  id="nested-list-subheader"
                                >
                                  <div
                                    class="MuiAvatar-root listSubheaderAvatar MuiAvatar-circle"
                                  >
                                    <img
                                      alt="Nike Logo"
                                      class="MuiAvatar-img"
                                      src="/images/logo/logo.png"
                                    />
                                  </div>
                                </div>
                                <hr
                                  class="MuiDivider-root verticalDivider"
                                />
                                <div
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                  role="button"
                                  tabindex="0"
                                >
                                  <div
                                    class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                  >
                                    <img
                                      alt="Dashboard"
                                      src="/images/icon_dashboard.svg"
                                    />
                                  </div>
                                  <div
                                    class="MuiListItemText-root hambergerExpandedMenuItemText"
                                  >
                                    <span
                                      class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      Dashboard
                                    </span>
                                  </div>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </div>
                                <div
                                  aria-disabled="false"
                                  class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                  role="button"
                                  tabindex="0"
                                >
                                  <div
                                    class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                  >
                                    <img
                                      alt="Processing"
                                      src="/images/icon_poprocessing.svg"
                                    />
                                  </div>
                                  <div
                                    class="MuiListItemText-root hambergerExpandedMenuItemText"
                                  >
                                    <span
                                      class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                    >
                                      P.O. Processing
                                    </span>
                                  </div>
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                                    />
                                  </svg>
                                  <span
                                    class="MuiTouchRipple-root"
                                  />
                                </div>
                                <div
                                  class="MuiCollapse-container MuiCollapse-entered"
                                  style="min-height: 0px;"
                                >
                                  <div
                                    class="MuiCollapse-wrapper"
                                  >
                                    <div
                                      class="MuiCollapse-wrapperInner"
                                    >
                                      <div
                                        class="MuiList-root"
                                      >
                                        <div
                                          aria-disabled="false"
                                          class="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                          role="button"
                                          tabindex="0"
                                        >
                                          <div
                                            class="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                          >
                                            <img
                                              alt=""
                                              src=""
                                            />
                                          </div>
                                          <div
                                            class="MuiListItemText-root hambergerExpandedMenuItemText"
                                          >
                                            <span
                                              class="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                            >
                                              P.O Search
                                            </span>
                                          </div>
                                          <span
                                            class="MuiTouchRipple-root"
                                          />
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </nav>
                            </div>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiDrawer-root MuiDrawer-modal ncss-row drawerContainer"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "zIndex": 1300,
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Backdrop))
                        onClick={[Function]}
                        open={true}
                        transitionDuration={
                          Object {
                            "enter": 225,
                            "exit": 195,
                          }
                        }
                      >
                        <ForwardRef(Backdrop)
                          classes={
                            Object {
                              "invisible": "MuiBackdrop-invisible",
                              "root": "MuiBackdrop-root",
                            }
                          }
                          onClick={[Function]}
                          open={true}
                          transitionDuration={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <ForwardRef(Fade)
                            in={true}
                            onClick={[Function]}
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                          >
                            <Transition
                              appear={true}
                              enter={true}
                              exit={true}
                              in={true}
                              mountOnEnter={false}
                              onClick={[Function]}
                              onEnter={[Function]}
                              onEntered={[Function]}
                              onEntering={[Function]}
                              onExit={[Function]}
                              onExited={[Function]}
                              onExiting={[Function]}
                              timeout={
                                Object {
                                  "enter": 225,
                                  "exit": 195,
                                }
                              }
                              unmountOnExit={false}
                            >
                              <div
                                aria-hidden={true}
                                className="MuiBackdrop-root"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "opacity": 1,
                                    "visibility": undefined,
                                  }
                                }
                              />
                            </Transition>
                          </ForwardRef(Fade)>
                        </ForwardRef(Backdrop)>
                      </WithStyles(ForwardRef(Backdrop))>
                      <TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={true}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Slide)
                          appear={true}
                          direction="right"
                          in={true}
                          onEnter={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout={
                            Object {
                              "enter": 225,
                              "exit": 195,
                            }
                          }
                        >
                          <Transition
                            appear={true}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={
                              Object {
                                "enter": 225,
                                "exit": 195,
                              }
                            }
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass"
                              elevation={16}
                              square={true}
                              style={
                                Object {
                                  "visibility": undefined,
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={16}
                                square={true}
                                style={
                                  Object {
                                    "visibility": undefined,
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiDrawer-paper MuiDrawer-paperAnchorLeft ncss-col-sm-2 drawerPaperClass MuiPaper-elevation16"
                                  style={
                                    Object {
                                      "visibility": undefined,
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <div
                                    className="hambergerExpandedContainer"
                                    role="presentation"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      aria-labelledby="nested-list-subheader"
                                      classes={
                                        Object {
                                          "root": "hambergerExpendedMenu",
                                        }
                                      }
                                      component="nav"
                                      subheader={
                                        <WithStyles(ForwardRef(ListSubheader))
                                          classes={
                                            Object {
                                              "root": "listSubheader",
                                            }
                                          }
                                          component="div"
                                          id="nested-list-subheader"
                                        >
                                          <WithStyles(ForwardRef(Avatar))
                                            alt="Nike Logo"
                                            classes={
                                              Object {
                                                "root": "listSubheaderAvatar",
                                              }
                                            }
                                            src="/images/logo/logo.png"
                                          />
                                        </WithStyles(ForwardRef(ListSubheader))>
                                      }
                                    >
                                      <ForwardRef(List)
                                        aria-labelledby="nested-list-subheader"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root hambergerExpendedMenu",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        component="nav"
                                        subheader={
                                          <WithStyles(ForwardRef(ListSubheader))
                                            classes={
                                              Object {
                                                "root": "listSubheader",
                                              }
                                            }
                                            component="div"
                                            id="nested-list-subheader"
                                          >
                                            <WithStyles(ForwardRef(Avatar))
                                              alt="Nike Logo"
                                              classes={
                                                Object {
                                                  "root": "listSubheaderAvatar",
                                                }
                                              }
                                              src="/images/logo/logo.png"
                                            />
                                          </WithStyles(ForwardRef(ListSubheader))>
                                        }
                                      >
                                        <nav
                                          aria-labelledby="nested-list-subheader"
                                          className="MuiList-root hambergerExpendedMenu MuiList-padding MuiList-subheader"
                                        >
                                          <WithStyles(ForwardRef(ListSubheader))
                                            classes={
                                              Object {
                                                "root": "listSubheader",
                                              }
                                            }
                                            component="div"
                                            id="nested-list-subheader"
                                          >
                                            <ForwardRef(ListSubheader)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiListSubheader-colorInherit",
                                                  "colorPrimary": "MuiListSubheader-colorPrimary",
                                                  "gutters": "MuiListSubheader-gutters",
                                                  "inset": "MuiListSubheader-inset",
                                                  "root": "MuiListSubheader-root listSubheader",
                                                  "sticky": "MuiListSubheader-sticky",
                                                }
                                              }
                                              component="div"
                                              id="nested-list-subheader"
                                            >
                                              <div
                                                className="MuiListSubheader-root listSubheader MuiListSubheader-sticky MuiListSubheader-gutters"
                                                id="nested-list-subheader"
                                              >
                                                <WithStyles(ForwardRef(Avatar))
                                                  alt="Nike Logo"
                                                  classes={
                                                    Object {
                                                      "root": "listSubheaderAvatar",
                                                    }
                                                  }
                                                  src="/images/logo/logo.png"
                                                >
                                                  <ForwardRef(Avatar)
                                                    alt="Nike Logo"
                                                    classes={
                                                      Object {
                                                        "circle": "MuiAvatar-circle",
                                                        "colorDefault": "MuiAvatar-colorDefault",
                                                        "fallback": "MuiAvatar-fallback",
                                                        "img": "MuiAvatar-img",
                                                        "root": "MuiAvatar-root listSubheaderAvatar",
                                                        "rounded": "MuiAvatar-rounded",
                                                        "square": "MuiAvatar-square",
                                                      }
                                                    }
                                                    src="/images/logo/logo.png"
                                                  >
                                                    <div
                                                      className="MuiAvatar-root listSubheaderAvatar MuiAvatar-circle"
                                                    >
                                                      <img
                                                        alt="Nike Logo"
                                                        className="MuiAvatar-img"
                                                        src="/images/logo/logo.png"
                                                      />
                                                    </div>
                                                  </ForwardRef(Avatar)>
                                                </WithStyles(ForwardRef(Avatar))>
                                              </div>
                                            </ForwardRef(ListSubheader)>
                                          </WithStyles(ForwardRef(ListSubheader))>
                                          <WithStyles(ForwardRef(Divider))
                                            className="verticalDivider"
                                          >
                                            <ForwardRef(Divider)
                                              className="verticalDivider"
                                              classes={
                                                Object {
                                                  "absolute": "MuiDivider-absolute",
                                                  "flexItem": "MuiDivider-flexItem",
                                                  "inset": "MuiDivider-inset",
                                                  "light": "MuiDivider-light",
                                                  "middle": "MuiDivider-middle",
                                                  "root": "MuiDivider-root",
                                                  "vertical": "MuiDivider-vertical",
                                                }
                                              }
                                            >
                                              <hr
                                                className="MuiDivider-root verticalDivider"
                                              />
                                            </ForwardRef(Divider)>
                                          </WithStyles(ForwardRef(Divider))>
                                          <WithStyles(ForwardRef(ListItem))
                                            button={true}
                                            className="hambergerExpandedMenuItems"
                                            classes={
                                              Object {
                                                "selected": "hambergerExpandedMenuItemsSelected",
                                              }
                                            }
                                            key="03322"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(ListItem)
                                              button={true}
                                              className="hambergerExpandedMenuItems"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                  "button": "MuiListItem-button",
                                                  "container": "MuiListItem-container",
                                                  "dense": "MuiListItem-dense",
                                                  "disabled": "Mui-disabled",
                                                  "divider": "MuiListItem-divider",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "gutters": "MuiListItem-gutters",
                                                  "root": "MuiListItem-root",
                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                  "selected": "Mui-selected hambergerExpandedMenuItemsSelected",
                                                }
                                              }
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="div"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <div
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ListItemIcon))
                                                      classes={
                                                        Object {
                                                          "root": "hambergerExpandedMenuIcon",
                                                        }
                                                      }
                                                      key=".$04519"
                                                    >
                                                      <ForwardRef(ListItemIcon)
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                            "root": "MuiListItemIcon-root hambergerExpandedMenuIcon",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                                        >
                                                          <img
                                                            alt="Dashboard"
                                                            src="/images/icon_dashboard.svg"
                                                          />
                                                        </div>
                                                      </ForwardRef(ListItemIcon)>
                                                    </WithStyles(ForwardRef(ListItemIcon))>
                                                    <WithStyles(ForwardRef(ListItemText))
                                                      classes={
                                                        Object {
                                                          "primary": "menuItemTextPrimary",
                                                          "root": "hambergerExpandedMenuItemText",
                                                        }
                                                      }
                                                      key=".$08978"
                                                      primary="Dashboard"
                                                    >
                                                      <ForwardRef(ListItemText)
                                                        classes={
                                                          Object {
                                                            "dense": "MuiListItemText-dense",
                                                            "inset": "MuiListItemText-inset",
                                                            "multiline": "MuiListItemText-multiline",
                                                            "primary": "MuiListItemText-primary menuItemTextPrimary",
                                                            "root": "MuiListItemText-root hambergerExpandedMenuItemText",
                                                            "secondary": "MuiListItemText-secondary",
                                                          }
                                                        }
                                                        primary="Dashboard"
                                                      >
                                                        <div
                                                          className="MuiListItemText-root hambergerExpandedMenuItemText"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiListItemText-primary menuItemTextPrimary"
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiListItemText-primary menuItemTextPrimary"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <span
                                                                className="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                                              >
                                                                Dashboard
                                                              </span>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(ListItemText)>
                                                    </WithStyles(ForwardRef(ListItemText))>
                                                    <NoSsr>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </NoSsr>
                                                  </div>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(ListItem)>
                                          </WithStyles(ForwardRef(ListItem))>
                                          <WithStyles(ForwardRef(ListItem))
                                            button={true}
                                            className="hambergerExpandedMenuItems"
                                            classes={
                                              Object {
                                                "selected": "hambergerExpandedMenuItemsSelected",
                                              }
                                            }
                                            key="13968"
                                            onClick={[Function]}
                                            selected={true}
                                          >
                                            <ForwardRef(ListItem)
                                              button={true}
                                              className="hambergerExpandedMenuItems"
                                              classes={
                                                Object {
                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                  "button": "MuiListItem-button",
                                                  "container": "MuiListItem-container",
                                                  "dense": "MuiListItem-dense",
                                                  "disabled": "Mui-disabled",
                                                  "divider": "MuiListItem-divider",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "gutters": "MuiListItem-gutters",
                                                  "root": "MuiListItem-root",
                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                  "selected": "Mui-selected hambergerExpandedMenuItemsSelected",
                                                }
                                              }
                                              onClick={[Function]}
                                              selected={true}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                                component="div"
                                                disabled={false}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="div"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <div
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button Mui-selected hambergerExpandedMenuItemsSelected"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    <WithStyles(ForwardRef(ListItemIcon))
                                                      classes={
                                                        Object {
                                                          "root": "hambergerExpandedMenuIcon",
                                                        }
                                                      }
                                                      key=".$13673"
                                                    >
                                                      <ForwardRef(ListItemIcon)
                                                        classes={
                                                          Object {
                                                            "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                            "root": "MuiListItemIcon-root hambergerExpandedMenuIcon",
                                                          }
                                                        }
                                                      >
                                                        <div
                                                          className="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                                        >
                                                          <img
                                                            alt="Processing"
                                                            src="/images/icon_poprocessing.svg"
                                                          />
                                                        </div>
                                                      </ForwardRef(ListItemIcon)>
                                                    </WithStyles(ForwardRef(ListItemIcon))>
                                                    <WithStyles(ForwardRef(ListItemText))
                                                      classes={
                                                        Object {
                                                          "primary": "menuItemTextPrimary",
                                                          "root": "hambergerExpandedMenuItemText",
                                                        }
                                                      }
                                                      key=".$17273"
                                                      primary="P.O. Processing"
                                                    >
                                                      <ForwardRef(ListItemText)
                                                        classes={
                                                          Object {
                                                            "dense": "MuiListItemText-dense",
                                                            "inset": "MuiListItemText-inset",
                                                            "multiline": "MuiListItemText-multiline",
                                                            "primary": "MuiListItemText-primary menuItemTextPrimary",
                                                            "root": "MuiListItemText-root hambergerExpandedMenuItemText",
                                                            "secondary": "MuiListItemText-secondary",
                                                          }
                                                        }
                                                        primary="P.O. Processing"
                                                      >
                                                        <div
                                                          className="MuiListItemText-root hambergerExpandedMenuItemText"
                                                        >
                                                          <WithStyles(ForwardRef(Typography))
                                                            className="MuiListItemText-primary menuItemTextPrimary"
                                                            component="span"
                                                            display="block"
                                                            variant="body1"
                                                          >
                                                            <ForwardRef(Typography)
                                                              className="MuiListItemText-primary menuItemTextPrimary"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTypography-alignCenter",
                                                                  "alignJustify": "MuiTypography-alignJustify",
                                                                  "alignLeft": "MuiTypography-alignLeft",
                                                                  "alignRight": "MuiTypography-alignRight",
                                                                  "body1": "MuiTypography-body1",
                                                                  "body2": "MuiTypography-body2",
                                                                  "button": "MuiTypography-button",
                                                                  "caption": "MuiTypography-caption",
                                                                  "colorError": "MuiTypography-colorError",
                                                                  "colorInherit": "MuiTypography-colorInherit",
                                                                  "colorPrimary": "MuiTypography-colorPrimary",
                                                                  "colorSecondary": "MuiTypography-colorSecondary",
                                                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                  "displayBlock": "MuiTypography-displayBlock",
                                                                  "displayInline": "MuiTypography-displayInline",
                                                                  "gutterBottom": "MuiTypography-gutterBottom",
                                                                  "h1": "MuiTypography-h1",
                                                                  "h2": "MuiTypography-h2",
                                                                  "h3": "MuiTypography-h3",
                                                                  "h4": "MuiTypography-h4",
                                                                  "h5": "MuiTypography-h5",
                                                                  "h6": "MuiTypography-h6",
                                                                  "noWrap": "MuiTypography-noWrap",
                                                                  "overline": "MuiTypography-overline",
                                                                  "paragraph": "MuiTypography-paragraph",
                                                                  "root": "MuiTypography-root",
                                                                  "srOnly": "MuiTypography-srOnly",
                                                                  "subtitle1": "MuiTypography-subtitle1",
                                                                  "subtitle2": "MuiTypography-subtitle2",
                                                                }
                                                              }
                                                              component="span"
                                                              display="block"
                                                              variant="body1"
                                                            >
                                                              <span
                                                                className="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                                              >
                                                                P.O. Processing
                                                              </span>
                                                            </ForwardRef(Typography)>
                                                          </WithStyles(ForwardRef(Typography))>
                                                        </div>
                                                      </ForwardRef(ListItemText)>
                                                    </WithStyles(ForwardRef(ListItemText))>
                                                    <ForwardRef
                                                      key=".$16439"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef>
                                                    <NoSsr>
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </NoSsr>
                                                  </div>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(ListItem)>
                                          </WithStyles(ForwardRef(ListItem))>
                                          <WithStyles(ForwardRef(Collapse))
                                            in={true}
                                            key="03706"
                                            timeout="auto"
                                          >
                                            <ForwardRef(Collapse)
                                              classes={
                                                Object {
                                                  "container": "MuiCollapse-container",
                                                  "entered": "MuiCollapse-entered",
                                                  "hidden": "MuiCollapse-hidden",
                                                  "wrapper": "MuiCollapse-wrapper",
                                                  "wrapperInner": "MuiCollapse-wrapperInner",
                                                }
                                              }
                                              in={true}
                                              timeout="auto"
                                            >
                                              <Transition
                                                addEndListener={[Function]}
                                                appear={false}
                                                enter={true}
                                                exit={true}
                                                in={true}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={null}
                                                unmountOnExit={false}
                                              >
                                                <div
                                                  className="MuiCollapse-container MuiCollapse-entered"
                                                  style={
                                                    Object {
                                                      "minHeight": "0px",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiCollapse-wrapper"
                                                  >
                                                    <div
                                                      className="MuiCollapse-wrapperInner"
                                                    >
                                                      <WithStyles(ForwardRef(List))
                                                        component="div"
                                                        disablePadding={true}
                                                        key="08285"
                                                      >
                                                        <ForwardRef(List)
                                                          classes={
                                                            Object {
                                                              "dense": "MuiList-dense",
                                                              "padding": "MuiList-padding",
                                                              "root": "MuiList-root",
                                                              "subheader": "MuiList-subheader",
                                                            }
                                                          }
                                                          component="div"
                                                          disablePadding={true}
                                                        >
                                                          <div
                                                            className="MuiList-root"
                                                          >
                                                            <WithStyles(ForwardRef(ListItem))
                                                              button={true}
                                                              className="hambergerExpandedMenuItems"
                                                              classes={
                                                                Object {
                                                                  "selected": "hambergerExpandedMenuItemsSelected",
                                                                }
                                                              }
                                                              key="02983"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(ListItem)
                                                                button={true}
                                                                className="hambergerExpandedMenuItems"
                                                                classes={
                                                                  Object {
                                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                    "button": "MuiListItem-button",
                                                                    "container": "MuiListItem-container",
                                                                    "dense": "MuiListItem-dense",
                                                                    "disabled": "Mui-disabled",
                                                                    "divider": "MuiListItem-divider",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "gutters": "MuiListItem-gutters",
                                                                    "root": "MuiListItem-root",
                                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                                    "selected": "Mui-selected hambergerExpandedMenuItemsSelected",
                                                                  }
                                                                }
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                                  component="div"
                                                                  disabled={false}
                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="div"
                                                                    disabled={false}
                                                                    focusVisibleClassName="Mui-focusVisible"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <div
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiListItem-root hambergerExpandedMenuItems MuiListItem-gutters MuiListItem-button"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      <WithStyles(ForwardRef(ListItemIcon))
                                                                        classes={
                                                                          Object {
                                                                            "root": "hambergerExpandedMenuIcon",
                                                                          }
                                                                        }
                                                                        key=".$04196"
                                                                      >
                                                                        <ForwardRef(ListItemIcon)
                                                                          classes={
                                                                            Object {
                                                                              "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                                              "root": "MuiListItemIcon-root hambergerExpandedMenuIcon",
                                                                            }
                                                                          }
                                                                        >
                                                                          <div
                                                                            className="MuiListItemIcon-root hambergerExpandedMenuIcon"
                                                                          >
                                                                            <img
                                                                              alt=""
                                                                              src=""
                                                                            />
                                                                          </div>
                                                                        </ForwardRef(ListItemIcon)>
                                                                      </WithStyles(ForwardRef(ListItemIcon))>
                                                                      <WithStyles(ForwardRef(ListItemText))
                                                                        classes={
                                                                          Object {
                                                                            "primary": "menuItemTextPrimary",
                                                                            "root": "hambergerExpandedMenuItemText",
                                                                          }
                                                                        }
                                                                        key=".$05631"
                                                                        primary="P.O Search"
                                                                      >
                                                                        <ForwardRef(ListItemText)
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiListItemText-dense",
                                                                              "inset": "MuiListItemText-inset",
                                                                              "multiline": "MuiListItemText-multiline",
                                                                              "primary": "MuiListItemText-primary menuItemTextPrimary",
                                                                              "root": "MuiListItemText-root hambergerExpandedMenuItemText",
                                                                              "secondary": "MuiListItemText-secondary",
                                                                            }
                                                                          }
                                                                          primary="P.O Search"
                                                                        >
                                                                          <div
                                                                            className="MuiListItemText-root hambergerExpandedMenuItemText"
                                                                          >
                                                                            <WithStyles(ForwardRef(Typography))
                                                                              className="MuiListItemText-primary menuItemTextPrimary"
                                                                              component="span"
                                                                              display="block"
                                                                              variant="body1"
                                                                            >
                                                                              <ForwardRef(Typography)
                                                                                className="MuiListItemText-primary menuItemTextPrimary"
                                                                                classes={
                                                                                  Object {
                                                                                    "alignCenter": "MuiTypography-alignCenter",
                                                                                    "alignJustify": "MuiTypography-alignJustify",
                                                                                    "alignLeft": "MuiTypography-alignLeft",
                                                                                    "alignRight": "MuiTypography-alignRight",
                                                                                    "body1": "MuiTypography-body1",
                                                                                    "body2": "MuiTypography-body2",
                                                                                    "button": "MuiTypography-button",
                                                                                    "caption": "MuiTypography-caption",
                                                                                    "colorError": "MuiTypography-colorError",
                                                                                    "colorInherit": "MuiTypography-colorInherit",
                                                                                    "colorPrimary": "MuiTypography-colorPrimary",
                                                                                    "colorSecondary": "MuiTypography-colorSecondary",
                                                                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                                                    "displayBlock": "MuiTypography-displayBlock",
                                                                                    "displayInline": "MuiTypography-displayInline",
                                                                                    "gutterBottom": "MuiTypography-gutterBottom",
                                                                                    "h1": "MuiTypography-h1",
                                                                                    "h2": "MuiTypography-h2",
                                                                                    "h3": "MuiTypography-h3",
                                                                                    "h4": "MuiTypography-h4",
                                                                                    "h5": "MuiTypography-h5",
                                                                                    "h6": "MuiTypography-h6",
                                                                                    "noWrap": "MuiTypography-noWrap",
                                                                                    "overline": "MuiTypography-overline",
                                                                                    "paragraph": "MuiTypography-paragraph",
                                                                                    "root": "MuiTypography-root",
                                                                                    "srOnly": "MuiTypography-srOnly",
                                                                                    "subtitle1": "MuiTypography-subtitle1",
                                                                                    "subtitle2": "MuiTypography-subtitle2",
                                                                                  }
                                                                                }
                                                                                component="span"
                                                                                display="block"
                                                                                variant="body1"
                                                                              >
                                                                                <span
                                                                                  className="MuiTypography-root MuiListItemText-primary menuItemTextPrimary MuiTypography-body1 MuiTypography-displayBlock"
                                                                                >
                                                                                  P.O Search
                                                                                </span>
                                                                              </ForwardRef(Typography)>
                                                                            </WithStyles(ForwardRef(Typography))>
                                                                          </div>
                                                                        </ForwardRef(ListItemText)>
                                                                      </WithStyles(ForwardRef(ListItemText))>
                                                                      <NoSsr>
                                                                        <WithStyles(memo)
                                                                          center={false}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={false}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </NoSsr>
                                                                    </div>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(ListItem)>
                                                            </WithStyles(ForwardRef(ListItem))>
                                                          </div>
                                                        </ForwardRef(List)>
                                                      </WithStyles(ForwardRef(List))>
                                                    </div>
                                                  </div>
                                                </div>
                                              </Transition>
                                            </ForwardRef(Collapse)>
                                          </WithStyles(ForwardRef(Collapse))>
                                        </nav>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </div>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Slide)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Drawer)>
          </WithStyles(ForwardRef(Drawer))>
        </Hamburger>
      </Router>
    </StaticRouter>
  </ThemeProvider>
</Provider>
`;
